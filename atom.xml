<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Huangs&#39;s Notes</title>
  
  <subtitle>明天的事后天就知道了</subtitle>
  <link href="https://hscyber.github.io/atom.xml" rel="self"/>
  
  <link href="https://hscyber.github.io/"/>
  <updated>2022-12-09T13:57:04.001Z</updated>
  <id>https://hscyber.github.io/</id>
  
  <author>
    <name>huangsh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>研究跟踪(3)：学习国内外研究团队及学者的研究工作</title>
    <link href="https://hscyber.github.io/posts/b441b64d/"/>
    <id>https://hscyber.github.io/posts/b441b64d/</id>
    <published>2022-12-09T12:54:25.000Z</published>
    <updated>2022-12-09T13:57:04.001Z</updated>
    
    <content type="html"><![CDATA[<p>之前记录了<a href="https://hscyber.github.io/posts/4270937d/">感兴趣期刊及研究方向研究跟踪</a>，但这主要是侧重兴趣向。实际上科研工作大都是<mark>国内外研究团队</mark>以<mark>项目及机构</mark>为依托开展，所以<font color="#dd0000">开展特定方向的具体工作时，系统查阅和了解、从而比较、借鉴国内外相关团队的工作</font>有利于团队工作的推进。</p><span id="more"></span><blockquote><p>平台：学者个人主页、学校网站、</p><p>Google scholar, Research Gate(推建注册，很多国内外学者在此推广自己的最新研究进展)</p></blockquote><p>跟踪的学者及团队主要来自于自己读论文过程中的检索。在看到和自己工作密切相关的工作或者觉得做的比较好、发了比较好的文章的工作时则可以<font color="#dd0000">顺着论文作者目录检索到相关的学者以及团队</font></p><ul><li>这里举个例子，我在看<mark>大数据×灾害</mark>反面的文章的时候，看到了几篇Zhenlong Li博士的文章，因此搜索他的主页：<a href="http://gis.cas.sc.edu/zhenlong/%E7%84%B6%E5%90%8E%E9%A1%BA%E7%9D%80%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E6%89%80%E5%9C%A8%E7%9A%84%E5%87%A0%E4%B8%AA%E5%AE%9E%E9%AA%8C%E5%AE%A4%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E8%BF%99%E4%BA%9B%E5%B7%A5%E4%BD%9C%E6%9D%A5%E8%BE%85%E5%8A%A9%E6%88%91%E5%BC%80%E5%B1%95%E9%A1%B9%E7%9B%AE%E7%94%B3%E8%AF%B7%E5%8F%8A%E6%8E%A8%E8%BF%9B%EF%BC%8C%E5%A2%9E%E8%BF%9B%E8%AE%A4%E8%AF%86%E4%BB%A5%E5%8F%8A%E5%80%9F%E9%89%B4%E6%80%9D%E8%B7%AF%E3%80%82">http://gis.cas.sc.edu/zhenlong/然后顺着可以找到所在的几个实验室，可以通过这些工作来辅助我开展项目申请及推进，增进认识以及借鉴思路。</a></li></ul><img src="/posts/undefined/image-20221209215311746.png" class alt="image-20221209215311746"><p>然后找到了他的地理空间大数据研究中心<a href="http://gis.cas.sc.edu/gibd/research/%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%99%E9%87%8C%E5%B0%B1%E6%89%BE%E5%88%B0%E4%BA%86%E5%AE%83%E4%BB%AC%E7%9B%AE%E5%89%8D%E5%BC%80%E5%B1%95%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%92%8C%E7%A0%94%E7%A9%B6%E6%88%90%E6%9E%9C">http://gis.cas.sc.edu/gibd/research/，然后这里就找到了它们目前开展的项目和研究成果</a></p><img src="/posts/undefined/image-20221209215409473.png" class alt="image-20221209215409473"><p>他是一个副教授，通常上面还会有更大的导师（大牛），于是有找到了灾害脆弱性研究实验室。</p><img src="/posts/undefined/image-20221209215525806.png" class alt="image-20221209215525806"><img src="/posts/undefined/image-20221209215602895.png" class alt="image-20221209215602895">]]></content>
    
    
    <summary type="html">&lt;p&gt;之前记录了&lt;a href=&quot;https://hscyber.github.io/posts/4270937d/&quot;&gt;感兴趣期刊及研究方向研究跟踪&lt;/a&gt;，但这主要是侧重兴趣向。实际上科研工作大都是&lt;mark&gt;国内外研究团队&lt;/mark&gt;以&lt;mark&gt;项目及机构&lt;/mark&gt;为依托开展，所以&lt;font color=&quot;#dd0000&quot;&gt;开展特定方向的具体工作时，系统查阅和了解、从而比较、借鉴国内外相关团队的工作&lt;/font&gt;有利于团队工作的推进。&lt;/p&gt;</summary>
    
    
    
    <category term="科研门外汉" scheme="https://hscyber.github.io/categories/%E7%A7%91%E7%A0%94%E9%97%A8%E5%A4%96%E6%B1%89/"/>
    
    
    <category term="论文" scheme="https://hscyber.github.io/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>研究跟踪(2)：GIS专业常见国内外期刊汇总</title>
    <link href="https://hscyber.github.io/posts/5d5f6e21/"/>
    <id>https://hscyber.github.io/posts/5d5f6e21/</id>
    <published>2022-12-09T12:54:00.000Z</published>
    <updated>2022-12-09T13:39:18.280Z</updated>
    
    <content type="html"><![CDATA[<p>综合期刊、地学、GIS和遥感方向的期刊以及交叉学科类期刊罗列。这里基于的是我到目前为止文献阅读过程中接触到的期刊，与我研究领域差的较大的或者我没接触的期刊则不列出。</p><span id="more"></span><blockquote><p>先凭印象大致罗列，后续补充，包括影响因子、分区及内容。</p></blockquote><p><mark>顶刊/子刊</mark>：这部分GIS方向其实很难发，大多是偏自然地理和纯科学的方向更容易发，目前我看的做大数据方向有发的期刊是<font color="#dd0000">Nature Sustainbility, Nature Communications, One Earth, Nature Human Behaviour</font>。</p><ol><li><p>Nature, Science, PNAS</p></li><li><p>Nature Energy, Naure Climate Change, <u>Nature Sustainbility</u>, Nature Reviews Earth &amp; Environment</p></li><li><p>Nature Geoscience, Nature Ecology &amp; Evolution, Nature Human Behaviour, Nature machine intelligence</p></li><li><p><u>Science Advance, Nature Communications, One Earth(Open)</u></p></li><li><p>新刊：Nature Water, Communications Earth &amp; Environment</p></li><li><p>新更名期刊：npj humanities and social sciences communications</p></li></ol><p><mark>地学顶刊(含遥感top)</mark>：</p><ol><li><strong>RSE</strong>, ISPRS Journal of Photogrammetry and Remote Sensing, <strong>TGRS</strong>(IEEE Transactions on Geoscience and Remote Sensing), <strong>JAG</strong>(IJ Applied Earth Observation and Geoinformation)</li><li>Global Environmental Change, Earth’s Future, GRL, Remote Sensing Letters, ERL…</li></ol><p><mark>数据类期刊顶刊</mark>：Scientific Data, ESSD</p><p><mark>GIS专业期刊</mark>：英文大致按分区或者认可度编号</p><ol><li>中文：地理学报、地球信息科学学报、武汉大学学报-信息科学版</li><li>综合性：Science Bulletion</li><li>AAG(Annals of the Association of American Geographers), IJGIS</li><li>TGIS, GIScience &amp; Remote Sensing, IJDE, Geo-spatial Information Science(武大信息学报英文版), Journal of Geographical Sciences(地理学报英文版),</li><li>Geographical Analysis, Cartography and Geographic Information Science, IJGI（三区）</li><li>Geography and Sustainability, Geocarto International, Annals of GIS</li></ol><p><mark>交叉-城市/规划类</mark></p><ol><li>Sustainable Cities and Society, Cities, Landscape and Urban Planning, Land Use Policy</li><li>Computers, Environment and Urban Systems</li><li>Computers in Human Behavior, Computers &amp; Geosciences</li></ol><p><mark>环境/生态/旅游等</mark></p><ol><li>Global Change Biology, Water Research, Frontiers in Ecology and the Environment, Environmental Science &amp; Technology</li><li>JEM, JCP, SOTE, Ecological Indicators(较多)</li><li>Tourism Management, Tourism Geographies, Current Issues in Tourism</li></ol><p><mark>灾害类</mark></p><ol><li>Weather and Climate Extremes(偏自然)气象类的顶刊很多但我接触很少</li><li>International Journal of Disaster Risk Reduction</li><li>NHESS, Natural Hazards Review, Journal of Disaster Research, Progress in Disaster Science</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;综合期刊、地学、GIS和遥感方向的期刊以及交叉学科类期刊罗列。这里基于的是我到目前为止文献阅读过程中接触到的期刊，与我研究领域差的较大的或者我没接触的期刊则不列出。&lt;/p&gt;</summary>
    
    
    
    <category term="科研门外汉" scheme="https://hscyber.github.io/categories/%E7%A7%91%E7%A0%94%E9%97%A8%E5%A4%96%E6%B1%89/"/>
    
    
    <category term="期刊" scheme="https://hscyber.github.io/tags/%E6%9C%9F%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>工具推荐(2)：一些我在用的工具与软件</title>
    <link href="https://hscyber.github.io/posts/462e4139/"/>
    <id>https://hscyber.github.io/posts/462e4139/</id>
    <published>2022-12-04T04:55:06.000Z</published>
    <updated>2022-12-06T06:26:11.204Z</updated>
    
    <content type="html"><![CDATA[<p>除了<a href="https://hscyber.github.io/posts/efdcabd/">插件</a>，再放一些个人<strong>在用的</strong>觉得较实用的电脑(小)工具/软件，大部分是开源的，都比较轻巧，随用随开（windows），还有一些编程及一些GIS专业软件，个别附带贴了一些参考文档和个人笔记。</p><span id="more"></span><p><mark>都附链接，也便于之后自己重装系统/换电脑后在此下载</mark>。无序合集：<a href="https://github.com/microsoft/PowerToys">PowerToys</a>, <a href="https://github.com/QL-Win/QuickLook">quicklook</a>, <a href="https://www.snipaste.com/">snipaste</a>, <a href="https://www.den4b.com/products/renamer">ReNamer</a>, <a href="https://www.jam-software.com/treesize_free?ca=1">Treesize</a>, <a href="https://www.drawboard.com/pdf">Drawboard pdf</a>, <a href="https://todo.microsoft.com/tasks/">Mircosoft to do</a>, <a href="https://github.com/microsoft/terminal">Windows Terminal</a>, <a href="https://www.voidtools.com/zh-cn/downloads/">everything</a>、<a href="https://www.listary.com/download">Listary</a>, <a href="https://pathcopycopy.github.io/">Path Copy Copy</a>, <a href="https://www.win-rar.com/start.html?&amp;L=0">WinRAR</a>、<a href="https://www.7-zip.org/download.html">7-zip</a>, <a href="https://gotohttp.com/">GotoHTTP</a>, <a href="https://github.com/Dreamacro/clash">Clash</a>, <a href="https://mathpix.com/">Mathpix Snipping Tool</a>, <a href="https://typora.io/">Typora</a>, <a href="https://www.draw.io/">draw.io</a>, <a href="https://www.xm1math.net/texmaker/">Texmaker</a>, <a href="https://www.overleaf.com/">Oberleaf</a>, <a href="https://product.mdnice.com/">MdNice</a>, <a href="https://www.adobe.com/cn/acrobat.html">Adobe Acrobat DC</a>, <a href="https://ocam.en.download.it/">oCam</a>, <a href="https://potplayer.en.softonic.com/">PotPlayer</a>, <a href="https://www.screentogif.com/">Screentogif</a>, <a href="https://notepad-plus-plus.org/downloads/">Notepad++</a>, <a href="https://code.visualstudio.com/">vscode</a>; <a href="https://www.jetbrains.com/">pycharm</a>, <a href="https://www.anaconda.com/">Anaconda、Miconda</a>, <a href="https://www.rstudio.com/products/rstudio/download/">RStudio</a>, <a href="https://www.mongodb.com/try/download/community">mongodb</a>; <a href="https://dev.mysql.com/downloads/mysql/5.7.html">mysql 57</a>, <a href="https://qgis.org/en/site/forusers/download.html">QGIS</a>, <a href="https://malagis.com/category/gis-software/">ArcGIS Destop</a>; <a href="https://malagis.com/category/gis-software/">ArcGIS Pro</a>, <a href="https://geodacenter.github.io/download.html">Geoda</a>, <a href="https://www.google.com/earth/download/gep/agree.html">Goole Earth pro</a>, <a href="http://www.bigemap.com/">BigeMap office</a>, <a href="https://www.coreldraw.com/en/">Coredraw</a>, <a href="https://www.giss.nasa.gov/tools/panoply/">panoply-view nc</a>, <a href="https://www.inoreader.com/apps">inoreader: RSS</a>, <a href="https://www.mendeley.com/guides/desktop">Mendeley Desktop</a>, <a href="https://www.zotero.org/">zotero</a>, <a href="https://gephi.org/">Gephi</a>, <a href="https://www.diskgenius.com/">DiskGenius</a>, <a href="https://www.microsoft.com/zh-cn/software-download/windows10">Win10</a>……</p><h2 id="通用类"><a class="markdownIt-Anchor" href="#通用类"></a> 通用类</h2><p>一些小工具/平台的产生是特定情境下自然而然的需求，<strong>减少重复劳动并提高体验</strong>。我也是<font color="#dd0000">应自己需求陆续检索并接触到这些软件</font>，开源则使得我得以共享，包括一些专业的GIS软件和平台。当然，对于一些好的产品/服务，我也会做坚定的付费支持者。</p><blockquote><p>工具尽管小，但后台耗电暂未经过测试，若使用笔记本等发现耗电高则可以视情况使用，一般无碍。</p></blockquote><p><mark>微软官方开源小工具集合</mark></p><ul><li><p><a href="https://github.com/microsoft/PowerToys">PowerToys</a>，下载<a href="https://github.com/microsoft/PowerToys/releases/tag/v0.64.1">链接</a>或者进入<a href="https://aka.ms/getPowertoys">应用商店下载</a></p></li><li><p>目前集成了17个小工具，包括：<font color="#dd0000">布局、文件进程查找、唤醒、图像尺寸调整、OCR、文件批量重命名、host编辑等等</font>。</p></li><li><img src="/posts/462e4139/image-20221206125900700.png" class alt="image-20221206125900700"></li></ul><p><mark>实用/通用工具类(前七个也已集成到微软应用商店)</mark></p><ol><li><a href="https://github.com/QL-Win/QuickLook">quicklook</a>：大小文件不打开即可快速预览，支持office txt csv/excel jupyter shp等的预览，关于<a href="https://hscyber.github.io/posts/75ba419a/#nteract%E6%89%93%E5%BC%80%E6%9F%A5%E7%9C%8B">jupyter预览</a>以及<a href="https://hscyber.github.io/posts/a8ff5b9/">大型表格文件处理经验</a><ul><li><img src="/posts/462e4139/image-20221206135028616.png" class alt="image-20221206135028616"></li></ul></li><li><a href="https://www.snipaste.com/">snipaste</a>：便携式截图、贴图、注释等<ul><li><img src="/posts/462e4139/image-20221204162926151.png" class alt="image-20221204162926151"></li></ul></li><li><a href="https://www.den4b.com/products/renamer">ReNamer</a>：可以根据自定义的规则批量重命名文件，比如添加前缀后缀，删除等等，<strong>设置完规则后可以预览</strong>，也不用担心误操作。当然也可以自己写代码，参考Python关于<a href="https://hscyber.github.io/posts/290b74f/">文件路径及目录批处理</a><ul><li><img src="/posts/462e4139/image-20221205202332811.png" class alt="image-20221205202332811"></li></ul></li><li><a href="https://www.jam-software.com/treesize_free?ca=1">Treesize</a>：查看电脑文件占用空间，用于辅助电脑清理，Want to Know Where Your Disk Space Has Gone?<ul><li><img src="/posts/462e4139/image-20221204163135224.png" class alt="image-20221204163135224"></li></ul></li><li><a href="https://www.drawboard.com/pdf">Drawboard pdf</a>：PDF阅读及笔记软件，支持ios，一开始付费目前开源，看个人习惯是否使用，支持云。<ul><li><img src="/posts/462e4139/image-20221204163343727.png" class alt="image-20221204163343727"></li></ul></li><li><a href="https://todo.microsoft.com/tasks/">Mircosoft to do</a>：之前用过一段时间的todo list，支持手机电脑同步</li><li><a href="https://github.com/microsoft/terminal">Windows Terminal</a>：windows上的终端，可以美化一下CMD，自行探索<ul><li><img src="/posts/462e4139/image-20221204163612317.png" class alt="image-20221204163612317"></li></ul></li><li>以上程序在<strong>微软应用商店</strong>也可直下</li><li><a href="https://www.voidtools.com/zh-cn/downloads/">everything</a>、<a href="https://www.listary.com/download">Listary</a>：本地文件快速检索软件，前者更强大，后者更轻便</li><li><a href="https://pathcopycopy.github.io/">Path Copy Copy</a>：添加鼠标右键，可以直接<strong>复制文件或文件夹所在的各种自定义路径，定义正反斜杠等等</strong></li><li><a href="https://www.win-rar.com/start.html?&amp;L=0">WinRAR</a>、<a href="https://www.7-zip.org/download.html">7-zip</a>：解压工具，前者收费可以找破解，后者是开源的</li><li><a href="https://gotohttp.com/">GotoHTTP</a>：跨平台便捷远程连接/协作工具(收费但便宜)</li><li><a href="https://github.com/Dreamacro/clash">Clash</a>：多平台通用网络代理软件，下载<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">链接</a></li><li><a href="https://hexo.io/zh-cn/">hexo</a>+<a href="https://pages.github.com/">gitpage</a>：网站博客框架及开源托管平台，比如我用的是hexo的经典Next主题，类似的平台还有<a href="https://gohugo.io/">hugo</a>, <a href="https://wordpress.com/zh-cn/">worldpress</a>等，但我没试</li></ol><p><mark>图文编辑类</mark></p><ol><li><a href="https://mathpix.com/">Mathpix Snipping Tool</a>：数学<strong>公式</strong>截图直接转——office、markdown、latex代码，避免手动输</li><li><a href="https://typora.io/">Typora</a>：我一直用来记笔记的软件，<a href="https://hscyber.github.io/posts/c694f527/">Markdown语法及Typora使用简介</a>，markdown语法在很多地方通用。</li><li>PPT、<a href="https://www.draw.io/">draw.io</a>、Visio：制图（尤其是流程图、技术路线图）绘制软件，visio可以通过拼夕夕</li><li><a href="https://www.xm1math.net/texmaker/">Texmaker</a>：Latex轻巧编辑器，类似的编辑器很多，这是我目前的选择</li><li><a href="https://www.overleaf.com/">Oberleaf</a>：非常好用的在线Latex编辑器和云共享平台，入门<a href="https://www.overleaf.com/learn">文档</a><ul><li><img src="/posts/462e4139/image-20221206133153290.png" class alt="image-20221206133153290"></li></ul></li><li><a href="https://product.mdnice.com/">MdNice</a>：最近刚接触的一个不错的markdown笔记兼排版软件，因为网页版提供了免费的图床（图片云存储），用于<font color="#dd0000">微信公众号排版</font>比typora方便。</li><li><a href="https://www.adobe.com/cn/acrobat.html">Adobe Acrobat DC</a>：查看、编辑、合并pdf等，公众号-科研sci绘图下载破解版<ul><li><img src="/posts/462e4139/image-20221206133353481.png" class alt="image-20221206133353481"></li></ul></li><li><a href="https://ocam.en.download.it/">oCam</a>：轻巧的高清录屏工具</li><li><a href="https://potplayer.en.softonic.com/">PotPlayer</a>：视频播放器</li><li><a href="https://www.screentogif.com/">Screentogif</a>：图片转gif<ul><li><img src="/posts/462e4139/image-20221204163924695.png" class alt="image-20221204163924695"></li></ul></li><li>Adobe Illustrator/photoshop：公众号-科研sci绘图可下载</li></ol><h2 id="专业软件类"><a class="markdownIt-Anchor" href="#专业软件类"></a> 专业软件类</h2><p><mark>编程开发类</mark></p><ol><li><a href="https://notepad-plus-plus.org/downloads/">Notepad++</a>：文本或代码查看（替换本地的txt），也可以用于coding</li><li><a href="https://code.visualstudio.com/">vscode</a>、<a href="https://www.jetbrains.com/">pycharm</a>：代码编辑器，安装及配置可参考<a href="https://hscyber.github.io/posts/9089f596/">Python环境(2)</a></li><li><a href="https://www.anaconda.com/">Anaconda、Miconda</a>：Python环境及管理，详情可参考<a href="https://hscyber.github.io/tags/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">Python环境</a></li><li><a href="https://www.rstudio.com/products/rstudio/download/">RStudio</a>：R语言常用编辑器</li><li><a href="https://www.mongodb.com/try/download/community">mongodb</a>、<a href="https://dev.mysql.com/downloads/mysql/5.7.html">mysql 57</a>：数据库</li></ol><p><mark>GIS专业</mark></p><ol><li><a href="https://qgis.org/en/site/forusers/download.html">QGIS</a>：功能强大的开源GIS处理分析及制图跨平台软件，一定程度上可以替代ArcGIS使用<ul><li>文档及教程学习：<a href="https://docs.qgis.org/3.22/en/docs/user_manual/index.html">https://docs.qgis.org/3.22/en/docs/user_manual/index.html</a></li><li><img src="/posts/462e4139/image-20221204164918629.png" class alt="image-20221204164918629"></li></ul></li><li><a href="https://malagis.com/category/gis-software/">ArcGIS Destop</a>、<a href="https://malagis.com/category/gis-software/">ArcGIS Pro</a>：GIS专业软件，工具toolbox及ArcPy的参考<a href="https://desktop.arcgis.com/zh-cn/arcmap/latest/tools/3d-analyst-toolbox/an-overview-of-the-3d-analyst-toolbox.htm">文档页面</a></li><li><a href="https://geodacenter.github.io/download.html">Geoda</a>：空间分析软件，有Python基础建议转向其提供的开源包<a href="https://pysal.org/docs/install/">PySAL </a><ul><li><img src="/posts/462e4139/image-20221204164445818.png" class alt="image-20221204164445818"></li></ul></li><li><a href="https://www.google.com/earth/download/gep/agree.html">Goole Earth pro</a>：谷歌地球桌面端，需要梯</li><li><a href="http://www.bigemap.com/">BigeMap office</a>：国产地图软件，可用于查看高精度的中国地图数据，分辨率很高很清晰，接口来自<a href="https://datacloud.geovisearth.com/support/map/summary">星球地图</a>，可以<font color="#dd0000">将接口接入QGIS的XYZ图层添加服务</font>实现本地调用预览</li><li><a href="https://www.coreldraw.com/en/">Coredraw</a>：矢量制图、类似于AI，某宝或拼夕夕</li><li><a href="https://www.giss.nasa.gov/tools/panoply/">panoply-nc查看</a>：NASA开发的用于查看nc文件的工具</li></ol><p><mark>科研相关</mark></p><ol><li><a href="https://www.inoreader.com/apps">RSS订阅</a>：这是我用了较长时间的免费RSS订阅平台，关注领域论文动态，具体可以查看<a href="https://hscyber.github.io/posts/4270937d/#rss%E8%AE%A2%E9%98%85">参考</a></li><li><a href="https://www.mendeley.com/guides/desktop">Mendeley Desktop</a>：论文引用平台，支持云同步</li><li><a href="https://www.zotero.org/">zotero</a>：知名开源文献管理软件，也可自行探索</li><li><a href="https://gephi.org/">Gephi</a>：文献/文本挖掘，共现分析、聚类等<ul><li><img src="/posts/462e4139/image-20221204165254915.png" class alt="image-20221204165254915"></li></ul></li></ol><p><mark>其他</mark></p><ol><li><a href="https://www.diskgenius.com/">DiskGenius</a>：系统分区管理，多系统安装、引导项查看等</li><li><a href="https://www.microsoft.com/zh-cn/software-download/windows10">Win10</a></li><li><a href="https://www.office.com/">Office login</a></li><li><a href="https://onedrive.live.com/">OneDriver login</a></li><li>……</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;除了&lt;a href=&quot;https://hscyber.github.io/posts/efdcabd/&quot;&gt;插件&lt;/a&gt;，再放一些个人&lt;strong&gt;在用的&lt;/strong&gt;觉得较实用的电脑(小)工具/软件，大部分是开源的，都比较轻巧，随用随开（windows），还有一些编程及一些GIS专业软件，个别附带贴了一些参考文档和个人笔记。&lt;/p&gt;</summary>
    
    
    
    <category term="Tools" scheme="https://hscyber.github.io/categories/Tools/"/>
    
    
    <category term="GIS" scheme="https://hscyber.github.io/tags/GIS/"/>
    
    <category term="效率" scheme="https://hscyber.github.io/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="工具推荐" scheme="https://hscyber.github.io/tags/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>工具推荐(1)：一些我在用的Chrom插件</title>
    <link href="https://hscyber.github.io/posts/efdcabd/"/>
    <id>https://hscyber.github.io/posts/efdcabd/</id>
    <published>2022-12-04T04:24:58.000Z</published>
    <updated>2022-12-04T05:19:05.357Z</updated>
    
    <content type="html"><![CDATA[<p>【持续更新】公开的插件是开源平台提供的重要好处，这里推一些我个人觉得比较实用的<a href="https://chrome.google.com/webstore/category/extensions?utm_source=chrome-ntp-icon">Chrom插件</a>。</p><span id="more"></span><p>这些插件实际上就是一些个人或团队开发维护的提高效率，减少造轮子的小工具，更多的也可以自己去商店探索</p><h3 id="插件枚举"><a class="markdownIt-Anchor" href="#插件枚举"></a> 插件枚举</h3><ol><li><p>Google translate：谷歌右键翻译服务</p></li><li><p>crxMouse Chrome™ 手势：通过鼠标右键的手势设置来实现网页的关闭、前进后退等等惭操作</p> <img src="/posts/efdcabd/image-20221204123940921.png" class alt="image-20221204123940921"></li><li><p>Imagus：鼠标悬停在图片上是可以<mark>放大预览</mark>缩略图，查看更高清的图片(原始分辨率)。</p><ul><li><img src="/posts/efdcabd/image-20221204124504104.png" class alt="image-20221204124504104"></li></ul></li><li><p>Proxy SwitchyOmega：这个在之前有介绍，是一个<a href="https://hscyber.github.io/posts/43ad9f20/#%E6%B5%8F%E8%A7%88%E5%99%A8rule%E8%AE%BE%E7%BD%AE%E6%8F%92%E4%BB%B6">切换代理的工具</a></p></li><li><p>Simple mass downloader：这是一个批量抓取/筛选<strong>单个网页</strong>信息的工具，也就是一个<mark>小爬虫</mark>，比如可以批量导出和下载一个页面上的所有链接、图片、html、json文件、数据等等，<mark>如果我们要在一个网页上一直点点点，这个工具就可能可以发挥用处</mark>：</p><ul><li><img src="/posts/efdcabd/image-20221204125413077.png" class alt="image-20221204125413077"></li></ul></li><li><p>Web Scraper - Free Web Scraping：这是一个免费的爬虫插件，可以自行定义规则实现多页面的批量抓取，我之前试用过，挺好用，对于不想写代码是一个很好的选择。关于爬虫的一些经验<a href="https://hscyber.github.io/posts/5374e378/">数据抓取(1)：Python网络爬虫学习与参考</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;【持续更新】公开的插件是开源平台提供的重要好处，这里推一些我个人觉得比较实用的&lt;a href=&quot;https://chrome.google.com/webstore/category/extensions?utm_source=chrome-ntp-icon&quot;&gt;Chrom插件&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Tools" scheme="https://hscyber.github.io/categories/Tools/"/>
    
    
    <category term="Chrom插件" scheme="https://hscyber.github.io/tags/Chrom%E6%8F%92%E4%BB%B6/"/>
    
    <category term="crxMouse" scheme="https://hscyber.github.io/tags/crxMouse/"/>
    
    <category term="Imagus" scheme="https://hscyber.github.io/tags/Imagus/"/>
    
    <category term="SwitchyOmega" scheme="https://hscyber.github.io/tags/SwitchyOmega/"/>
    
    <category term="WebScraper" scheme="https://hscyber.github.io/tags/WebScraper/"/>
    
    <category term="downloader" scheme="https://hscyber.github.io/tags/downloader/"/>
    
  </entry>
  
  <entry>
    <title>文献篇(3)：如何开展研究背景调研和总结？</title>
    <link href="https://hscyber.github.io/posts/e8c71149/"/>
    <id>https://hscyber.github.io/posts/e8c71149/</id>
    <published>2022-12-03T14:10:34.000Z</published>
    <updated>2022-12-09T12:55:14.409Z</updated>
    
    <content type="html"><![CDATA[<p>本文预计包含以下内容（注意，一些基于截止目前本人<strong>狭窄的研究领域和有限的研究经历</strong>），<mark>个人习惯-供参考</mark>，研究生初期：</p><p>①为什么要进行文献调研和现状分析？ ②要把握的重难点是？  ③怎么查文献读文献？<br>④ 应用类？方法类？如何总结归纳？   ⑤论文背景部分怎么写？</p><span id="more"></span><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>先闲谈一谈目前的一些感触，题外话</p></blockquote><p>​        先瞎扯一扯大环境：在目前社会发展迅速、科学技术日新月异，全球化的背景下，国家和社会对从事学术研究工作的团体和个人都提出了更高的要求。具体到每一个研究领域，由于存在大量的方向并且各个方向的基础都已经奠定（各个山头的大厦都已建好），<font color="#dd0000">要在此基础上做出创新性强的尤其是原创性研究工作越来越难，需要的工作量和学科知识也越来越多且杂</font>。而同时，由于技术的进步（数据、算法、算力），很多团队（尤其是积累更深厚的团体）推进工作的速度越来越快，也即<font color="#dd0000">成果的迭代加快和产出越来越多</font>，不论是热门还是相对冷门的研究方向，这拉大了不同团队的差距（马太效应处处存在），也对老师和学生提出了更高的要求。</p><p>​        反观学生现状呢？以我自己而言。我是大三时候开始接触所谓“科研”，那时候参加了一些大学生创训项目，尽管有老师指导，但是实际在开展工作及读写论文的时候不可谓困难重重。从软件使用到代码，中英文论文查阅和下载，工作开展和最后论文撰写，每一步都要自己摸索学习。好歹摸爬滚打有了一点经验，大四到研究生前一两年，又会苦恼于技术学习和实现、研究迷茫及选题困难等问题，时间又紧张。迷茫加之心浮气躁，尤其是会不断质疑研究的意义等问题，很快就磨灭了读研前对科研的幻想（当然，人与事皆需要允许特例，身披光环乘风破浪的故事和人总有）。而<font color="#dd0000">耐下心来读文献和思考，梳理研究方向的脉络，一定程度上可以让我们更快进入“正轨”</font>。如果一开始直接定的题目很好做和写，自然顺风不少，但这样的在我身边貌似是少数，老师给的题目通常只是较为泛泛，具体的落点和选题定是要结合研究现状和可用资源进行调整。</p><h3 id="关于论文"><a class="markdownIt-Anchor" href="#关于论文"></a> 关于论文</h3><p>​        据我目前的认识，科研工作开展以<font color="#dd0000">团队/机构为单元</font>，以<font color="#dd0000">项目/课题为依托和支持</font>，以<font color="#dd0000">论文/专利等为成果的载体和证明</font>。顺着这个再看一下目前科研工作的开展流程。当然，这个流程是一个错综的环，这里随便切一个点往下写。</p><ol><li>圈内大佬开会讨论然后<strong>发布项目指南</strong>（方向）（或者地方政府等其他机构，类似）</li><li>团队依托自身平台和资源，结合自身的研究方向和<strong>已有积累</strong>，<strong>申请项目，写本子写研究计划</strong>，小的则一个团队，大项目则组队，人越多项目越大金额也越多，学生补助和老师收入也越高。</li><li>专家评审，<strong>筛选</strong>本子和大团队，确定最终的资助团体</li><li>工作开展，成果产出（论文、专利、咨询报告……），规定时限达成目标</li><li>项目交付。（但个人感觉目前国内的项目结题和立项……虎头蛇尾）</li><li>以此往复，学生靠论文毕业就业、老师依托项目和成果晋升，再申更大的项目……</li><li>……</li></ol><p>​        <strong>论文是科学研究成果的重要载体</strong>，因此，<font color="#dd0000">所在学科/领域重点研究方向与前沿科学问题的把握，好的有价值，创新的选题，脱不开文献调研和背景综述</font>这一工作，这一部分也是项目申请的重要一环。</p><ul><li><p>客观名利来说，学生需要论文<strong>毕业</strong>，需要论文来展现自身工作和能力，奖学金的申请、项目申请和结题均需要论文支撑。而且对于致力于从事科学工作来说（个人认为博士毕业是科学工作的起点），硕博期间就是需要培养上面这一套流程，才能够<strong>混口饭吃</strong>。此外，作为科研工作者，除了工作，还总是希望自己的工作能够得到认可受关注，收获“价值体验”，那么，就需要争取将成果发表在受关注的平台。</p></li><li><p>主观来说，就算不发，做工作、读论文、找问题、写论文，探索和实践的过程本身对我们的思维和动手能力都有很好的锻炼，很多事情大路是相通的。相较于重复和简单的劳动，探索、挣扎困顿、痛苦和对困难的思考更能促进我们的<strong>进步</strong>成长。终生学习。</p></li></ul><p>​        扯远了，最后，回到写论文本身。一个小工作/一篇文章讲的宽泛些就是回答这么几个问题：==<mark>我为什么要做这个工作（出发点，理论or实际意义）？别人现在现在做了些啥是怎么做的，我准备做些啥怎么做，有什么不一样（创新点）？好不容易做完我发现了些啥有用或有意思的结果</mark>？这些可以囊括在摘要+背景+讨论里，所以这几块也是最难写的，当然，也是最能升华的地方。然后：</p><ol><li><font color="#dd0000">向下兼容</font>，不看论文何谈写论文，闭门造车可不是一般人能造出来的。想发表英文文章不能只看中文吧，想将文章发表在受关注的期刊，不能只看普通期刊的文章吧。</li><li><font color="#dd0000">创新性和好点子</font>怎么来，看不能只看一篇吧，好多人都做为啥我的就是创新，创新了些什么，得读很多论文（大牛组另说…）。</li><li><font color="#dd0000">要动手写的时候</font>，知道怎么凑那么多字，怎么做好看的图，也都得模仿，<strong>复制粘贴</strong>吧</li><li><font color="#dd0000">要想做得快且少走弯路</font>，自己闷头做肯定不行，方法、数据最好都能快速借鉴和实现，这样进度推进才快，所以，技术也最好能加把劲。</li></ol><p>​        最后想再强调一下大方向和<mark>具体选题的重要性</mark>，题好一半成，且研究方向是否处于所在学科的热门或者前沿领域则影响发表文章的层级及经费、资源、工作参考等支持。或许有人说要干坐冷板凳，但是“冷”我觉得指的是笃定有潜在价值的方向（不管是理论上或者是现实意义，说服自己），不然若自己都觉问题无事可做，再投身感觉显得不够明智。当然，题目好不好也难说，<u>依赖于主观认识也需要考虑客观的实践</u>，但是我个人还是倡导<mark>三思而后行</mark>。</p><h2 id="why"><a class="markdownIt-Anchor" href="#why"></a> Why</h2><p><mark>为什么要读文献？为什么要开展背景调研？</mark>，有了上面的了解，回答这个问题就比较自然了。</p><ol><li>了解学科研究发展脉络，加深对学科方向所处阶段现状的认知；</li><li>把握所在研究领域的研究重点热点方向，更好的选择方向和题目；</li><li>论文是研究工作的载体，从文章中像无数前辈学习、借鉴，积累知识，少走弯路；</li><li>为了能够撰写和发表论文，尤其是高质量的论文。从别人的故事里提取“素材”写自己的故事；</li><li>培养自身归纳总结提炼和深度思考的能力和习惯，为之后从事工作奠定基础</li></ol><p>其他一些可能相对次要的点</p><ol><li>集思广益发散思维想点子；</li><li>写项目写本子，写论文背景；</li><li>学单词学句子，学图文表达；</li><li>……</li></ol><h2 id="what"><a class="markdownIt-Anchor" href="#what"></a> What</h2><p>在讨论怎么读和学之前，先区分一下：<mark>阅读的类别</mark>。阅读这里只讨论<mark>大主题和小主题</mark>两方面，前者是更加宽泛的大方向的阅读，辅助于选题和研究背景了解，后者则视为写一篇论文时读相关的具体工作。</p><p><font color="#dd0000">针对一个大的研究主题或是具体的小的研究问题</font>，相关的论文的分类主要有(中英通用)：</p><ol><li><strong>研究类</strong>（这方面有针对应用和方法的，但实际中应用类工作也涉及方法，所以不展开分类）</li><li><strong>观点和综述类文章，学位论文以及项目申请书</strong>（这些本身就可以有背景的参考）<ul><li>一般一个具体的方向，隔几年就会有一篇比较好的综述文章产出</li></ul></li><li><strong>新旧</strong>。需要区分旧的工作（历史）和近几年的工作（最新）。</li></ol><p>此外，还有数据类文章，这类的多了解自己列一个清单<strong>记备忘录</strong>即可，包括论文里的开源数据。</p><h2 id="how-检索读"><a class="markdownIt-Anchor" href="#how-检索读"></a> How -&gt;检索+读</h2><h3 id="检索和下载"><a class="markdownIt-Anchor" href="#检索和下载"></a> 检索和下载</h3><p>​按照上述的类别检索综述/综述，或者应用研究类的文章，以及是旧的文章还是最新的文章。通常<u>，大的研究主题应该先拉长时间线把关键节点的综述文章和高引用的研究文章梳理一下，再找不同阶段代表性的工作学习；而针对一个于自己手边将要写的论文相关的一些工作，主要关注一下阶段性综述和最近几年的工作，再早的也可以从中得到参考</u>。当然，每篇论文都会写背景，也可以直接从最相关的文献里看，但是有时候会局限或者不够，因为<font color="#dd0000">每个人讲故事的素材都不一样，需要找到并整合自己最需要的素材</font>。</p><ul><li>参见笔记，<a href="https://hscyber.github.io/posts/33f7b1b7/">文献篇(1) 论文检索</a>和<a href="https://hscyber.github.io/posts/99dce68a/">文献篇(2) 论文下载</a>，之前记录过。</li><li>此外，阅读除了针对特定主题的各种，还需要及时了解科研动态（包括期刊的新文章和国内外团队的进展），这里是我个人追踪新动态的一些方式<a href="https://hscyber.github.io/posts/4270937d/">研究跟踪</a>。至于团队，则具体按照研究论文跟踪作者及团队即可。</li></ul><h3 id="读与记"><a class="markdownIt-Anchor" href="#读与记"></a> 读与记</h3><blockquote><p>针对较为宽泛的主题，需要大范围地检索及关联检索，这部分以泛读为主。</p></blockquote><p>而针对明确的主题和问题（更加聚焦），以我的个人习惯举例，做法不固定，自己可以探索，我的想法是<strong>尽量找全较相关的文章并梳理</strong>：</p><ol><li><p>确定主题即部分<font color="#dd0000">关键词</font>，查阅相关的概念和关键词</p></li><li><p>中文——再检索部分<font color="#dd0000">中文核心期刊（EI CSCD）查阅中文综述</font>，不够还可以看看学位论文</p></li><li><p>在英文——谷歌学术检索，根据关键词<a href="https://hscyber.github.io/posts/33f7b1b7/">检索</a>，逐页查看论文标题及摘要，将<font color="#dd0000">相关的内容记录其年份-期刊-标题,以及标题的翻译、亮点和摘要(我使用的是typora，也可以word)</font>，期刊写简称就行，差的文章可以忽略</p></li><li><p><font color="#dd0000">翻页并记录</font>大概几十页，感觉内容足够或相关的文章越来越少，停止检索，这时候一个<strong>文档</strong>应该有了几十甚至上百篇论文（这个过程实际上很快）</p></li><li><p>结合该笔记本进一步确定要下载的文件，删除不相关的文献，然后再逐文献将相关的下载到本地，怎么下载上面有提，我个人是习惯都下下来。</p></li><li><p><font color="#dd0000">泛读+精度</font>，<strong>先读比较好的综述，再读案例，过程看情况记笔记包括方法-数据等等的</strong></p></li><li><p>顺着文献阅读过程的<font color="#dd0000">重要引用</font>来进一步补充阅读，<strong>直至感觉已经了解地比较清楚或者无新知识</strong>，这个阶段需要自己把握</p></li><li><p>此外，对于领域top期刊，可以单独对期刊源进行<strong>精准检索</strong>，补充</p></li><li><p>这是<font color="#dd0000">最花时间和最需要耐心</font>的一步。</p></li><li><p><mark>读的过程中不要带着偏见和固执去读（即预设觉得一些文章和方法不行等等），要先接受别人的故事背景和出发点，才能更多地理解其他作者的出发点和意图，以及了解它工作中的困难，先读，再发表评论（没有实践就没有发言权hh）</mark>，其实研究越做做久了也可能把人的思维做“死”，一些观点就很绝对。而实际上不同研究工作差别很大，不加了解就评论，多少是有失偏颇的。</p></li></ol><p>一些过程记录截图：</p><img src="/posts/e8c71149/image-20221203222420143.png" class alt="image-20221203222420143"><img src="/posts/e8c71149/image-20221203222241912.png" class alt="image-20221203222241912"><h2 id="how-思"><a class="markdownIt-Anchor" href="#how-思"></a> How -&gt; 思</h2><p>现在完成了论文的检索，也把一些论文下下来看了，然后就是<mark>进一步梳理与总结</mark>，这一步必然是奠定在前面的阅读笔记基础之上的。这里的目标是需要<font color="#dd0000">找某个或者几个角度（时间线、方法手段、研究对象、研究数据、研究内容等）来对现有的工作进行大致的归类，同时这个角度即顺着这条研究的线路有利于引出自己的工作以及创新点</font>。</p><ul><li><p>简单来说就是找到一条研究工作组成的路子，然后把自己的工作排进去</p></li><li><p>至于习惯和思路，就需要通过反复的实践来积累经验，形成自己的逻辑</p></li><li><p>当然，也可以从已有的研究工作中学习，从别人写的文章、项目申请书、等等中学习借鉴。</p></li><li><p>其他的暂时就没想到了</p></li></ul><h2 id="how-写"><a class="markdownIt-Anchor" href="#how-写"></a> How -&gt; 写</h2><blockquote><p>怎么写科技论文研究背景？怎么写申报书研究现状</p></blockquote><p>有了<strong>大量的阅读和思考总结</strong>之后，<strong>模仿和写</strong>就不是很成问题，只要能够把那几个问题写清楚表达清晰，就好了。后续的结果能够多大程度上支撑你的观点，那是另一回事了。</p><ul><li>我为什么要做这个工作——意义？</li><li>别人现在现在做了些啥是怎么做的，我准备做些啥怎么做，有什么不一样——创新点？</li><li>好不容易做完我发现了些啥有用或有意思的结果？</li></ul><p>越写到后面，发现写的文字越少，想来，这进一步说明了<mark>前期工作</mark>的重要性。就像造房子，有了想法，有了图纸，打好了地基，剩下的事情就是卖卖力气，按部就班添砖加瓦了吧哈哈。</p><p>至于写<strong>项目申请书</strong>，是需要融合多个方面的研究主题，瞄准一个更大的研究主题，将它们提炼综合成一个大的方向，是一个<mark>自下而上又自上而下</mark>来回调整的过程。其具体的背景和问题写起来是一样的，不过需要站的更高一些。至于项目能不能申请上，那又是另一个方面的问题了，暂略过。</p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><blockquote><p>最近一个多月的时间，由于参与了组里几个项目的申请工作，所以较密集地针对几个较为宽泛的研究主题以及小主题进行了<u>文献调研、研究现状归纳总结和撰写研究背景</u>，过程中有了很多收获，遂想花点时间静心整理一下自己入学一年多时间里在读文献，调查研究现状和写背景方面的一些习惯和心得。【这周加班干活，具体内容待闲暇时间补充2022/06/09】。</p><p>这篇总结竟已拖了6个月！该补补了hh，下半年也陆续进行了一些项目申请工作。上周师妹和我交流文献检索和阅读总结的问题，今天组会老师提到了师弟读文献不足/研究问题不清晰的问题，催促我也做一些小结，以便共享。便趁隔离，初步小结一下。【2022/12/02】</p></blockquote><p>以上就是自己现阶段一些思考的记录，可能略显潦草和粗浅，但无妨，因为我想写且已经写了，行动便是胜利Hh。花了近半天的时间来写，由于这方面的体会一直有更新和强化，所以写起来基本上没有多少停顿，希望再过一段时间回过头来看自己写的东西会有新的收获和体会，这就是进步了。</p><p>在这个信息泛滥知识爆炸的时代，保持学习的好奇心，从前辈和身边的人身上学习，从优秀的作品中学习，我觉得是一项很重要且有益的技能。每个人都有自己的思维习惯和技能树，如果在学习中利用和打造自己的长处，养成自己的习惯，需要通过不断劳动和思考。</p><p>我希望能有更多的人将具体的实践<mark>分享</mark>出来，知识和技能一定程度上是可以=共享和交换=的。</p><p><mark>今天突然因为疫情被封楼了，2022/12/03晚 23:00</mark></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文预计包含以下内容（注意，一些基于截止目前本人&lt;strong&gt;狭窄的研究领域和有限的研究经历&lt;/strong&gt;），&lt;mark&gt;个人习惯-供参考&lt;/mark&gt;，研究生初期：&lt;/p&gt;
&lt;p&gt;①为什么要进行文献调研和现状分析？ ②要把握的重难点是？  ③怎么查文献读文献？&lt;br&gt;
④ 应用类？方法类？如何总结归纳？   ⑤论文背景部分怎么写？&lt;/p&gt;</summary>
    
    
    
    <category term="科研门外汉" scheme="https://hscyber.github.io/categories/%E7%A7%91%E7%A0%94%E9%97%A8%E5%A4%96%E6%B1%89/"/>
    
    
    <category term="文献" scheme="https://hscyber.github.io/tags/%E6%96%87%E7%8C%AE/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib绘图常用代码速查</title>
    <link href="https://hscyber.github.io/posts/12d20fad/"/>
    <id>https://hscyber.github.io/posts/12d20fad/</id>
    <published>2022-12-03T08:48:02.000Z</published>
    <updated>2022-12-09T09:48:06.591Z</updated>
    
    <content type="html"><![CDATA[<p>【持续扩充】由于经常使用Matplotlib绘制<mark>草图</mark>，发现需要时常去找一些之前的代码，因此便将<strong>常用代码</strong>和有人整理的<strong>一个很nice的速查备忘录</strong>贴于此处便于查看。</p><span id="more"></span><h2 id="常用代码"><a class="markdownIt-Anchor" href="#常用代码"></a> 常用代码</h2><p>常规导入、创建及输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># import geopandas as gpd</span></span><br><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.backends.backend_pdf <span class="keyword">import</span> PdfPages</span><br><span class="line"><span class="keyword">import</span> matplotlib.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="comment"># 随时更改</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;figure.dpi&#x27;</span>] = <span class="number">120</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.size&#x27;</span>]=<span class="number">10.5</span> <span class="comment">#五号字体</span></span><br><span class="line">cm = <span class="number">1</span>/<span class="number">2.54</span></span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(figsize=(<span class="number">10</span>*cm,<span class="number">10</span>*cm), facecolor=<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">fig, axes = plt.subplots(nrows =<span class="number">2</span> ,ncols=<span class="number">2</span>, figsize=(<span class="number">20</span>*cm,<span class="number">10</span>*cm), facecolor=<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">axes = axes.flatten()</span><br><span class="line"></span><br><span class="line">fig.tight_layout()</span><br><span class="line">fig.savefig(<span class="string">r&#x27;...\f1.png&#x27;</span>,dpi=<span class="number">300</span>,bbox_inches=<span class="string">&#x27;tight&#x27;</span>,pad_inches=<span class="number">0.5</span>)</span><br><span class="line">fig.savefig(<span class="string">r&#x27;...\f1.svg&#x27;</span>,dpi=<span class="number">300</span>,bbox_inches=<span class="string">&#x27;tight&#x27;</span>,pad_inches=<span class="number">0.2</span>)</span><br><span class="line">save_pdf = <span class="string">&quot;./figure/test.pdf&quot;</span></span><br><span class="line">fig.savefig(save_pdf,<span class="built_in">format</span>=<span class="string">&#x27;pdf&#x27;</span>)</span><br><span class="line"><span class="comment"># 多PDF</span></span><br><span class="line">pdf = PdfPages(save_pdf);fig.savefig(pdf,<span class="built_in">format</span>=<span class="string">&#x27;pdf&#x27;</span>);pdf.close() </span><br></pre></td></tr></table></figure><p>刻度相关：<a href="https://hscyber.github.io/posts/152b5c56/">边框spines及刻度ticks/labels属性设置及隐藏</a></p><p>文本注释：<a href="https://hscyber.github.io/posts/66a3b602/">绘图坐标系及注释位置控制</a></p><h2 id="速查"><a class="markdownIt-Anchor" href="#速查"></a> 速查</h2><blockquote><p>该备忘录整理的非常好，建议熟悉内容之后再使用</p></blockquote><p><a href="https://github.com/matplotlib/cheatsheets">来源</a>，这是<a href="https://github.com/HSCyber/Data_public/blob/main/matplotlib/cheatsheets_handouts.pdf">拼接的pdf</a>，可下载本地查看。</p><img src="/posts/12d20fad/plot1.png" class><img src="/posts/12d20fad/plot2.png" class><img src="/posts/12d20fad/plot3.png" class><img src="/posts/12d20fad/plot4.png" class><img src="/posts/12d20fad/plot5.png" class>]]></content>
    
    
    <summary type="html">&lt;p&gt;【持续扩充】由于经常使用Matplotlib绘制&lt;mark&gt;草图&lt;/mark&gt;，发现需要时常去找一些之前的代码，因此便将&lt;strong&gt;常用代码&lt;/strong&gt;和有人整理的&lt;strong&gt;一个很nice的速查备忘录&lt;/strong&gt;贴于此处便于查看。&lt;/p&gt;</summary>
    
    
    
    <category term="Python可视化" scheme="https://hscyber.github.io/categories/Python%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>网络代理工具Clash的使用及规则代理切换</title>
    <link href="https://hscyber.github.io/posts/43ad9f20/"/>
    <id>https://hscyber.github.io/posts/43ad9f20/</id>
    <published>2022-12-01T15:09:23.000Z</published>
    <updated>2022-12-01T16:58:42.676Z</updated>
    
    <content type="html"><![CDATA[<p>通常访问谷歌需要一些辅助，此处记录一下：1-代理的基本原理；2-目前使用较广的网络代理工具<a href="https://github.com/Dreamacro/clash">Clash</a>(支持win/mac/linux/android)的使用；3-自定义浏览器规则模式(Rule)。</p><span id="more"></span><h2 id="代理简介"><a class="markdownIt-Anchor" href="#代理简介"></a> 代理简介</h2><p>详细的可以参见<a href="https://en.wikipedia.org/wiki/Proxy_server">百科</a>。举例来说，本地网络(localhost 127.0.0.1)处于限制无法访问<a href="https://www.google.com/">Google</a>；<a href="https://scholar.google.com.hk/">Google 学术</a>，先将访问<u>请求发送</u>给一个有权访问的<mark>代理服务器(<mark>如在香港)，它<u>接收请求</u>访问谷歌，再将请求结果<u>返回</u>给本地，充当了一个</mark>桥梁</mark>的作用，这即是代理服务的作用。如下图，几点说明：</p><ul><li>由于服务器访问很快，所以响应时间基本可以忽略。【当然如果很慢那说明代理不太行hh】</li><li>Clash等等<strong>工具</strong>充当的作用即是一个可操作界面，能够辅助用户完成这一对话，代理服务商的IP地址获取及服务的沟通。这样功能的软件很多，如SSR, Shadowrcket, Surge(Mac/ios), Quantumult等等</li><li>网站通常是Https，但是代理目前通常走的是<strong>Socks5协议</strong>，这类协议只<strong>转发数据包</strong>，省略其他各种信息，因此更加快捷隐私。端口默认为7890。</li><li><strong>127.0.0.1</strong>的意思为本地网络即localhost。此外，<ul><li>对于视频电影等持续访问操作则涉及到网站的<strong>会话Session</strong>等知识，暂不展开</li><li><strong>端口Port</strong>是电脑/IP地址之间通讯的地址通道，具体暂不展开</li></ul></li></ul><img src="/posts/43ad9f20/image-20221202000821947.png" class alt="image-20221202000821947"><p>有了上述大致认识之后，我们对于网络代理的使用和调试就能够顺手一些。</p><h2 id="clash配置win"><a class="markdownIt-Anchor" href="#clash配置win"></a> clash配置(win)</h2><blockquote><p>下载链接：<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">clash-windows/mac</a>；<a href="https://github.com/Kr328/ClashForAndroid/releases">Clash-Android</a>；<a href="https://github.com/Dreamacro/clash/releases">clash-linux</a></p></blockquote><p>配置步骤如下：</p><ol><li>下载软件并<font color="#dd0000">解压到文件夹</font>，windows建议放在非C盘</li><li>打开文件夹双击<font color="#dd0000">运行</font>程序clash.exe，右下角可以看到小猫咪,打开</li><li>在<font color="#dd0000">Profiles</font>配置文件界面将订阅链接粘贴到地址栏下载<font color="#dd0000">Download</font>，然后选中刚刚刷新的配置<ul><li>常见问题，这里初次更新/下载订阅时一般需要确保clash的系统代理处在<strong>关闭</strong>状态，原理见上。</li></ul></li><li>在<font color="#dd0000">Genaral</font>通用设置处，打开系统代理<font color="#dd0000">System Proxy</font>，其他视情况开启</li><li>在<font color="#dd0000">Proxies</font>处选择代理方式及节点，推荐Global模型及自动选择节点模型</li><li>访问网页测试<a href="https://www.google.com/%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%B7%B2%E7%BB%8F%E8%AE%BE%E7%BD%AE%E5%AE%8C%E6%AF%95">https://www.google.com/，如果可以访问，已经设置完毕</a></li><li>此外，TUN模式可用于一些需要本地包括cmd均走代理的情景，应需查阅。</li></ol><p>操作示意：</p><img src="/posts/43ad9f20/image-20221202003231976.png" class alt="image-20221202003231976"><img src="/posts/43ad9f20/image-20221202003619895.png" class alt="image-20221202003619895"><img src="/posts/43ad9f20/image-20221202003734064.png" class alt="image-20221202003734064"><h2 id="浏览器rule设置插件"><a class="markdownIt-Anchor" href="#浏览器rule设置插件"></a> 浏览器Rule设置(插件)</h2><p>在实际使用过程中，有一个很常见的问题：<font color="#dd0000">有的网站外部代理不能访问（比如单位内网）或者较慢</font>，比如政府网站等等。这时候就自然想到，设置对于不同域名的网站走不同的网络模式，即访问百度时走本地网络，访问谷歌时走代理，那么，那么多网站怎么列全呢？已经有人做了这事。</p><p>我这里使用的插件为<a href="chrome-extension://padekgcemlokbadohgkifijomclgjgif/options.html#!/about">SwitchyOmega</a>，使用参考步骤</p><ol><li>设置代理的访问情景模式，随意取名，如Clash，设置代理<font color="#dd0000">协议为SOCKS5，代理服务器为127.0.1，代理端口为7890</font>.</li><li>新建自动选择模式，下载规则配置文件，设置规则访问方式，默认为直连，规则为Clash</li><li>平时使用过程中可以在按钮出切换直连（不代理）或系统代理或其他，也可以添加规则，即<font color="#dd0000">发现某个网站内网才能访问或者更快，那我就添加一个规则</font>，同理。</li><li>以上</li></ol><p>界面示意：</p><img src="/posts/43ad9f20/image-20221202004615019.png" class alt="image-20221202004615019"><img src="/posts/43ad9f20/image-20221202004702487.png" class alt="image-20221202004702487"><p>比如这里我设置地理所官网为直连。</p><img src="/posts/43ad9f20/image-20221202004905135.png" class alt="image-20221202004905135">]]></content>
    
    
    <summary type="html">&lt;p&gt;通常访问谷歌需要一些辅助，此处记录一下：1-代理的基本原理；2-目前使用较广的网络代理工具&lt;a href=&quot;https://github.com/Dreamacro/clash&quot;&gt;Clash&lt;/a&gt;(支持win/mac/linux/android)的使用；3-自定义浏览器规则模式(Rule)。&lt;/p&gt;</summary>
    
    
    
    <category term="Tools" scheme="https://hscyber.github.io/categories/Tools/"/>
    
    
    <category term="SwitchyOmega" scheme="https://hscyber.github.io/tags/SwitchyOmega/"/>
    
    <category term="Tools" scheme="https://hscyber.github.io/tags/Tools/"/>
    
    <category term="Clash" scheme="https://hscyber.github.io/tags/Clash/"/>
    
    <category term="Proxy" scheme="https://hscyber.github.io/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>如何远程访问服务器jupyter或协作</title>
    <link href="https://hscyber.github.io/posts/488f31bc/"/>
    <id>https://hscyber.github.io/posts/488f31bc/</id>
    <published>2022-11-16T12:49:30.000Z</published>
    <updated>2022-11-16T13:01:04.593Z</updated>
    
    <content type="html"><![CDATA[<p>服务器上手需要一些基础，但jupyter等类似平台的<mark>远程服务</mark>可以使我们在本机（windows等）访问远程的笔记本及数据，进行<strong>本地化的操作和处理</strong>，从而简化地很方便！包括数据处理、机器学习等后续应该会用到，此外也可用于<mark>协作</mark>写代码。</p><span id="more"></span><p>示例：10.168.210.201为统一局域网下的另一台电脑，如果公网访问–也类似</p><img src="/posts/488f31bc/image-20221116202827246.png" class alt="image-20221116202827246"><h2 id="步骤参考"><a class="markdownIt-Anchor" href="#步骤参考"></a> 步骤参考</h2><blockquote><p>环境的配置可以参考一下之前的笔记 <a href="https://hscyber.github.io/tags/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">Python环境配置</a>，以下假设服务器具有终端及图形界面，但是对于没有图形界面的服务器要保持代码后台运行且<strong>不占用终端</strong>则需要结合&amp;以及nohup等命令，以及SSH，暂不展开</p></blockquote><p>大致流程，以本机ubuntu20为例</p><ol><li>配置conda及安装jupyter notebook/jupyter lab（以下以notebook为例，lab可以共用）</li><li>创建jupyter的登录密码<code>jupyter-notebook password</code>，比如我可以设123456，设置后会生成哈希密码，写入</li><li>生成jupyter的默认配置文件<code>jupyter-notebook --generate-config</code>，如果已有则可以忽略，该文件用来修改一些jupyter的默认设置</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ome/huangsh/.jupyter/jupyter_notebook_config.py</span></span><br><span class="line">c.NotebookApp.allow_root = <span class="literal">True</span></span><br><span class="line">c.NotebookApp.ip=<span class="string">&#x27;*&#x27;</span><span class="comment"># 或者&#x27;0.0.0.0&#x27;，</span></span><br><span class="line">c.NotebookApp.password = <span class="string">u&#x27;argon2:$argon2id$v=19$m=10240,t=10,p=8$7AWi3...&#x27;</span>  </span><br><span class="line">c.NotebookApp.open_browser = <span class="literal">False</span></span><br><span class="line">c.NotebookApp.port =<span class="number">8888</span> <span class="comment">#可自行指定一个端口, 访问时使用该端口228行</span></span><br></pre></td></tr></table></figure><ol start="4"><li>使用文本编辑器打开该文件 jupyter_notebook_config.py</li><li>添加几行信息（默认是被注释的，因此也可以找到这几行去掉注释再修改），如上<ol><li>设置允许以管理员root方式运行jupyterlab</li><li>设置允许任意ip段访问（如果是局域网则只能在局域网下访问）</li><li>设置运行时不打开浏览器，因为服务器通常没有界面只有终端</li><li>设置之前生成的哈希密码</li><li>设置访问端口，一般设置默认的8888</li></ol></li><li>输入命令启动jupyter lab/notebook</li><li>在另一台电脑浏览器中打开链接http:/10.168.210.201:8888/，输入密码即可访问，ip地址可以在网络的设置中找到ip的地址，或者输入命令查看<code>sudo hostname -I</code>。window下查看相关的网络即可</li></ol><p>想关文件查看，window则一般默认在<code>C:\Users\huangs\.jupyter</code>，用户路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /home/huangsh/.jupyter/jupyter_server_config.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;ServerApp&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;argon2:$argon2id$v=19$m=10240,t=10,p=8$7AWi3...&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令实例，终止服务则<code>ctrl +c</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda activate base</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda activate geop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jupyter-notebook password</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jupyter-notebook --generate-config</span></span><br><span class="line">......</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jupyter notebook</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">$ jupyter notebook --allow-root</span></span><br></pre></td></tr></table></figure><p>查看本机的ip</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo hostname -I</span></span><br><span class="line">10.168.210.201 2400:...</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此处的ip则为 10.168.210.201</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://blog.csdn.net/abc13526222160/article/details/108628640">https://blog.csdn.net/abc13526222160/article/details/108628640</a></li><li>无网络环境下linux 服务器ssh配置jupyter（自行检索相关参考测试即可），未细看：<ul><li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-run-connect-to-jupyter-notebook-on-remote-server">https://www.digitalocean.com/community/tutorials/how-to-install-run-connect-to-jupyter-notebook-on-remote-server</a></li><li><a href="https://cloud.tencent.com/developer/article/1649899">https://cloud.tencent.com/developer/article/1649899</a></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;服务器上手需要一些基础，但jupyter等类似平台的&lt;mark&gt;远程服务&lt;/mark&gt;可以使我们在本机（windows等）访问远程的笔记本及数据，进行&lt;strong&gt;本地化的操作和处理&lt;/strong&gt;，从而简化地很方便！包括数据处理、机器学习等后续应该会用到，此外也可用于&lt;mark&gt;协作&lt;/mark&gt;写代码。&lt;/p&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="https://hscyber.github.io/categories/ubuntu/"/>
    
    
    <category term="jupyter" scheme="https://hscyber.github.io/tags/jupyter/"/>
    
    <category term="服务器" scheme="https://hscyber.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Pandas(杂)：指定多列进行求和生成新列</title>
    <link href="https://hscyber.github.io/posts/349d0aa/"/>
    <id>https://hscyber.github.io/posts/349d0aa/</id>
    <published>2022-11-15T14:03:24.000Z</published>
    <updated>2022-11-22T15:49:03.528Z</updated>
    
    <content type="html"><![CDATA[<p><code>cols=df.columns[2:] ; cols = [...] </code>  #指定列名，再求和即可</p><p><code>df[‘sum’] = df[cols].sum(axis=1) </code></p><span id="more"></span><p>如果是针对行列的序号 ，则写出如    <code>df.iloc[:, 2:10].sum(axis=1)</code></p><p>其他的如mean; max; median; std; …，更为复杂的计算则可以通过df.apply()自定义函数实现</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;cols=df.columns[2:] ; cols = [...] &lt;/code&gt;  #指定列名，再求和即可&lt;/p&gt;
&lt;p&gt;&lt;code&gt;df[‘sum’] = df[cols].sum(axis=1) &lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Pandas数据处理分析" scheme="https://hscyber.github.io/categories/Pandas%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Pandas" scheme="https://hscyber.github.io/tags/Pandas/"/>
    
    <category term="多列求和" scheme="https://hscyber.github.io/tags/%E5%A4%9A%E5%88%97%E6%B1%82%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>计算机软硬件(杂)：GPU与CPU的对比</title>
    <link href="https://hscyber.github.io/posts/af6efebd/"/>
    <id>https://hscyber.github.io/posts/af6efebd/</id>
    <published>2022-11-08T15:19:23.000Z</published>
    <updated>2022-11-10T07:06:08.501Z</updated>
    
    <content type="html"><![CDATA[<p>初步了解一下GPU和CPU的区别，尤其是GPU为什么能够<strong>加速运算</strong>。</p><span id="more"></span><h2 id="简要对比"><a class="markdownIt-Anchor" href="#简要对比"></a> 简要对比</h2><h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3><p><mark>CPU(central processing unit)</mark>：一台计算机包含处理器、输入输出部件、内存、总线等部件，其中，CPU是一台计算机中用于<strong>执行指令</strong>的核心部件， 由数百万个晶体管构成，可以有多个核也就是多核。</p><p><mark>GPU(graphics processing unit)</mark>：也是一种处理器，由许多更小、更专业的内核组成。将一个处理任务划分并跨多个内核处理时。</p><ul><li>GPU 最初设计用于为计算机图形和视频游戏机创建图像，但自 2010 年初以来，GPU 还用于加速涉及量数据的计算。</li><li>CPU 永远无法完全被 GPU 取代：GPU 通过允许应用程序内的<strong>重复计算并行运行</strong>，而主程序继续在 CPU 上运行，从而补充了 CPU 架构。CPU 可以被认为是整个系统的任务主管，协调广泛的<mark>通用</mark>计算任务，而 <strong>GPU 执行范围更窄的更专业的任务（通常是数学任务）</strong>。与 CPU 相比，GPU 可以利用<strong>并行</strong>性的力量在相同的时间内完成更多的工作。</li><li>简言之：CPU更通用且智能，GPU功能窄但是特定任务可以很快。</li></ul><h3 id="区别"><a class="markdownIt-Anchor" href="#区别"></a> 区别</h3><ul><li>图：GPU有更多晶体管，更多计算单元</li></ul><img src="/posts/af6efebd/GPU-transistor-625x314.png" class alt="img"><ul><li>图：在 CPU 上，每个线程都会最小化数据访问时间（白条）。在单个时间片内，线程尽可能多地完成工作（绿色条）。为了实现这一点，CPU 需要<strong>低延迟</strong>，这需要大缓存和复杂的控制逻辑。缓存在每个核心只有几个线程时工作得最好，因为线程之间的上下文切换很昂贵</li><li>而GPU则可以<strong>频繁切换线程</strong>完成运算，同时运行上千个进程，从而大幅提高数据吞吐量。</li></ul><img src="/posts/af6efebd/image-20221108230831871.png" class alt="image-20221108230831871"><p>共同点：两者都是关键的计算引擎；两者都是基于硅的微处理器。区别：</p><ul><li>CPU 具有庞大而广泛的指令集，可以管理计算机的每个输入和输出， 适用于各种各样的工作负载，尤其是那些延迟或每核性能很重要的工作负载。作为一个强大的执行引擎，CPU 将其较少数量的内核集中在单个任务和快速完成任务上。</li><li>CPU串行计算，GPU 最适合重复性和高度并行的计算任务，可以加速 CPU 在给定时间内可以处理的数据量。除了视频渲染，GPU 在机器学习、金融模拟和风险建模以及许多其他类型的科学计算方面表现出色。</li><li>数量，单个CPU的核数通常较少，但如果向同一台服务器添加 4 到 8 个 GPU 可以提供多达 40,000 个额外的内核。</li><li>单个 CPU 内核比单个 GPU 内核更快（根据 CPU 时钟速度衡量）和更智能（根据可用指令集衡量）</li><li>……</li></ul><h2 id="显卡"><a class="markdownIt-Anchor" href="#显卡"></a> 显卡</h2><h3 id="关于显卡"><a class="markdownIt-Anchor" href="#关于显卡"></a> 关于显卡</h3><p><a href="https://en.wikipedia.org/wiki/Graphics_card">显卡</a>是包含GPU（主要部件）的一个拓展卡，一些点：</p><ul><li>显卡也称独立显卡，<strong>具有独立的随机存取存储器</strong>(RAM)、<strong>冷却系统</strong>和专用电源调节器等。<ul><li>俗称的显存也就是显卡的运行内存</li></ul></li><li>集成显卡是集成到主板或其他系统上的视频硬件，成本低、体积小、简单、能耗低。集成显卡的性能通常不如显卡，因为集成显卡内部的图形处理单元需要<strong>与 CPU 共享系统资源</strong>。</li><li>随着显卡处理能力的提高，对电力的需求随之增加。当前的高性能显卡往往会<strong>消耗大量电力</strong></li><li>一些图形卡可以链接在一起，以允许跨多个卡扩展图形处理。这是使用主板上的 PCIe 总线或更常见的数据桥来完成的。一般情况下，卡必须是同一型号才能联动，大多数低端卡都不能这样联动。</li><li>截至 2016 年，显卡中使用的 GPU（图形芯片或芯片组）的主要供应商是 AMD 和 Nvidia</li><li><a href="https://en.wikipedia.org/wiki/OpenCL">OpenCL</a>和<a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>等计算平台允许使用显卡进行<a href="https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units">通用计算</a>。</li></ul><h3 id="opencl与cuda"><a class="markdownIt-Anchor" href="#opencl与cuda"></a> OpenCL与CUDA</h3><p>OpenCL（开放计算语言）是一个<strong>框架</strong>，用于编写跨异构平台执行的程序，包括CPU GPU DSP及其他处理器或硬件加速器。OpenCL 指定用于对这些设备和应用程序编程接口进行编程的编程语言API（基于C99、C<ins>14和C</ins>17 ）来控制平台并在计算设备上执行程序。<strong>OpenCL 为使用基于任务和数据的并行性的并行计算提供标准接口</strong>。</p><p>CUDA 由Nvidia创建，之前的 API（如Direct3D和OpenGL）需要高级图形编程技能，CUDA 则可以与C、C++和Fortran等编程语言一起使用，这种可访问性使并行编程专家更容易使用 GPU 资源。CUDA（或计算统一设备架构）是一种<strong>并行计算平台和应用程序编程接口</strong>(API)，它允许软件使用某些类型的图形处理单元(GPU) 进行通用处理，这种方法称为 GPU 上的通用计算 ( GPGPU ) ）。CUDA 是一个软件层，<strong>可以直接访问 GPU 的虚拟指令集和并行计算元素</strong>，以执行计算内核。</p><p>cuda python：CUDA® Python 为 CUDA 驱动程序和运行时 API 提供 Cython/Python 包装器；现在可以使用 PIP 和 Conda 安装。Python 开发人员将能够利用大规模并行 GPU 计算来获得更快的结果和准确性</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ol><li>书籍《计算机组成与体系结构》</li><li><a href="https://www.heavy.ai/technical-glossary/cpu-vs-gpu">https://www.heavy.ai/technical-glossary/cpu-vs-gpu</a></li><li><a href="https://www.intel.com/content/www/us/en/products/docs/processors/cpu-vs-gpu.html">CPU vs. GPU: Making the Most of Both</a></li><li><a href="https://developer.nvidia.com/blog/cuda-refresher-reviewing-the-origins-of-gpu-computing/">https://developer.nvidia.com/blog/cuda-refresher-reviewing-the-origins-of-gpu-computing/</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;初步了解一下GPU和CPU的区别，尤其是GPU为什么能够&lt;strong&gt;加速运算&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="计算机软硬件知识" scheme="https://hscyber.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="CPU" scheme="https://hscyber.github.io/tags/CPU/"/>
    
    <category term="GPU" scheme="https://hscyber.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Pandas(3)：pivot_table数据透视表分类汇总统计用法速记</title>
    <link href="https://hscyber.github.io/posts/cdacb688/"/>
    <id>https://hscyber.github.io/posts/cdacb688/</id>
    <published>2022-11-08T11:37:45.000Z</published>
    <updated>2022-11-25T04:18:57.017Z</updated>
    
    <content type="html"><![CDATA[<p>groupby常用于简单的汇总统计，多个变量及复杂统计可使用数据透视<mark>pd.pivot_table</mark>。其在excel中数据透视表也是一个很好用的工具，用法也很简单。此处详细列一下<strong>常用写法以及函数</strong>（如统计某列的<strong>唯一值数量</strong>）</p><span id="more"></span><h2 id="函数参数详解"><a class="markdownIt-Anchor" href="#函数参数详解"></a> 函数参数详解</h2><blockquote><p>该方法用于对数据按照指定类别字段进行<strong>分类汇总/统计</strong>，以下为我对该方法的使用理解。</p></blockquote><p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html">pandas.pivot_table</a>(data, values=None, index=None, columns=None, aggfunc=‘mean’, fill_value=None, margins=False, dropna=True, margins_name=‘All’, observed=False, sort=True)，这里的每个参数基本都常用，举例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 这里有一张轨迹信息表，我想按照城市统计轨迹的条数和唯一用户数...</span></span><br><span class="line">df = pd.read_csv(...)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f_unique</span>(<span class="params">xlist</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(np.unique(xlist))</span><br><span class="line">reslut = pd.pivot_table(df,index=[<span class="string">&#x27;citycode&#x27;</span>, <span class="string">&#x27;cityname&#x27;</span>],</span><br><span class="line">                        values=[<span class="string">&#x27;track_id&#x27;</span>, <span class="string">&#x27;user_id&#x27;</span>], </span><br><span class="line">                        aggfunc=&#123;<span class="string">&#x27;tid&#x27;</span>:[np.mean,f_unique],<span class="string">&#x27;user_id&#x27;</span>:f_unique&#125;,</span><br><span class="line">                        fill_value=<span class="number">0</span>,margins=<span class="literal">False</span>)</span><br><span class="line">reslut = reslut.reset_index()</span><br></pre></td></tr></table></figure><ul><li><p>data，fill_value，dropna望文生义即可，margins即是否求一个行列的总和。</p></li><li><p><strong>index</strong>：用来分组汇总的要素，比如我这里按城市分组，这里的分组就是<strong>拆分再组合</strong>，即按照城市拆开分别用同样的方法运算，再组合成一张表。</p></li><li><p><strong>values</strong>：需要计算统计的<strong>指标列名</strong>，比如这里是轨迹的id和用户id。</p></li><li><p><strong>columns</strong>：这里是另一个维度的分组变量，是对指标的数值进行分组，比如我这里还有一列用来指示轨迹的年份，那么就会按年，<strong>在index分组切分之后的基础上再分组</strong>用于计算。通常用于类别变量，比如指标值有a b c 三种数值，需要分别统计。</p><ul><li>observed与columns组合使用，即可以对指标的数值类进行进一步的筛选</li></ul></li><li><p><strong>aggfunc</strong>：统计的方式，默认为求均值。这里实际上是对每一个最小拆分后的组分进行计算，再连接到index及columns。即函数的输入<strong>可以视为df的某列的一些元素</strong>，一维序列series！比如这里每次计算的是<strong>面向一个城市的track_id组成的列表</strong>，理解了这个就方便我们写自定义函数了</p><ul><li>每个指标都可以应用多个函数，通过列表指定即可，如[np.sum, np.mean,…]</li><li>也可以使用pandas series支持的函数unique();nunque()，如<code>f_unique = lambda x: len(x.unique())</code></li></ul></li><li><p>其中，如果不按上述方式用字典指定values对应的函数则会每个指标都应用函数，如<code>aggfunc = [np.sum, np.mean]</code>则会计算track_id和user_id两列的求和及均值，得到四列</p></li></ul><h2 id="结果表"><a class="markdownIt-Anchor" href="#结果表"></a> 结果表</h2><p>得到的结果通常具有多维索引，且列名不符合预期，此时可以进行如下调整：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reslut = reslut.reset_index()</span><br></pre></td></tr></table></figure><p>如果列是多重索引，可以先转成字典再计算值得到目标列名再替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(reslut.columns)</span><br><span class="line"><span class="comment"># 具体列如何视情况分析</span></span><br><span class="line">cols_dict = <span class="built_in">dict</span>(reslut.columns)</span><br><span class="line">cols2 = <span class="built_in">list</span>(cols_dict.keys())</span><br><span class="line"><span class="comment"># 替换新列</span></span><br><span class="line">reslut.columns = cols2</span><br></pre></td></tr></table></figure><h2 id="常用函数列举"><a class="markdownIt-Anchor" href="#常用函数列举"></a> 常用函数列举</h2><p>前面已经分析过，实际上<strong>函数计算的对象是针对最小拆分单元</strong>（扁平一维序列series），那么就可以将其视为一个list进行任意个性化的统计。np自带的函数有</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">np.unique()查找数组的唯一元素</span><br><span class="line">np.isin()返回一个布尔数组，如果的元素在指定<span class="built_in">list</span>中，则返回 <span class="literal">True</span>，否则返回 <span class="literal">False</span></span><br><span class="line">np.count_nonzero计算非<span class="number">0</span>值的个数</span><br><span class="line"></span><br><span class="line">argmax()返回沿轴的最大值的索引。</span><br><span class="line">nanargmax()返回指定轴中最大值的索引，忽略 NaN。</span><br><span class="line">argmin()返回沿轴的最小值的索引。</span><br><span class="line">nanargmin()返回指定轴中最小值的索引，忽略 NaN。</span><br><span class="line"></span><br><span class="line">ptp()沿轴的值范围（最大值 - 最小值），极差。</span><br><span class="line">median()计算沿指定轴的中位数。</span><br><span class="line">average()计算沿指定轴的加权平均值。</span><br><span class="line">mean()计算沿指定轴的算术平均值。</span><br><span class="line">std()计算沿指定轴的标准偏差。</span><br><span class="line">var()计算沿指定轴的方差。</span><br><span class="line">nanmedian()计算沿指定轴的中位数，同时忽略 NaN。</span><br><span class="line">nanmean()计算沿指定轴的算术平均值，忽略 NaN。</span><br><span class="line">nanstd()计算沿指定轴的标准偏差，同时忽略 NaN。</span><br><span class="line">nanvar()计算沿指定轴的方差，同时忽略 NaN。</span><br><span class="line"></span><br><span class="line">percentile()沿指定轴计算数据的第 q 个百分位数。</span><br><span class="line">nanpercentile()计算沿指定轴的数据的第 q 个百分位数，同时忽略 nan 值。</span><br><span class="line">quantile()沿指定轴计算数据的第 q 个分位数。</span><br><span class="line">nanquantile()沿指定轴计算数据的第 q 个分位数，同时忽略 nan 值。</span><br></pre></td></tr></table></figure><p>函数的具体用法可以在numpy文档搜素：</p><ul><li><p><a href="https://numpy.org/doc/stable/reference/routines.set.html">https://numpy.org/doc/stable/reference/routines.set.html</a></p></li><li><p><a href="https://numpy.org/doc/stable/reference/routines.sort.html">https://numpy.org/doc/stable/reference/routines.sort.html</a></p></li><li><p><a href="https://numpy.org/doc/stable/reference/routines.statistics.html">https://numpy.org/doc/stable/reference/routines.statistics.html</a></p></li></ul><p>其他的更加复杂的，多条件的统计或计算则可以通过<mark>自定义函数</mark>完成</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;groupby常用于简单的汇总统计，多个变量及复杂统计可使用数据透视&lt;mark&gt;pd.pivot_table&lt;/mark&gt;。其在excel中数据透视表也是一个很好用的工具，用法也很简单。此处详细列一下&lt;strong&gt;常用写法以及函数&lt;/strong&gt;（如统计某列的&lt;strong&gt;唯一值数量&lt;/strong&gt;）&lt;/p&gt;</summary>
    
    
    
    <category term="Pandas数据处理分析" scheme="https://hscyber.github.io/categories/Pandas%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Pandas" scheme="https://hscyber.github.io/tags/Pandas/"/>
    
    <category term="pivot_table" scheme="https://hscyber.github.io/tags/pivot-table/"/>
    
  </entry>
  
  <entry>
    <title>计算机软硬件(杂)：驱动及显卡驱动</title>
    <link href="https://hscyber.github.io/posts/f202eaf6/"/>
    <id>https://hscyber.github.io/posts/f202eaf6/</id>
    <published>2022-10-23T12:29:55.000Z</published>
    <updated>2022-11-15T14:28:30.955Z</updated>
    
    <content type="html"><![CDATA[<p>设备<a href="https://en.wikipedia.org/wiki/Device_driver">驱动程序</a>（Device Driver）——<mark>“硬件设备和系统之间的桥梁</mark>”。相当于硬件的接口，操作系统只有通过这个接口控制硬件设备的工作，无需了解所使用硬件的准确细节。PC–&gt;OS–&gt;驱动–&gt;硬件设备。</p><span id="more"></span><h3 id="其他点"><a class="markdownIt-Anchor" href="#其他点"></a> 其他点</h3><ol><li>驱动程序依赖于<strong>硬件</strong>以及特定的操作系统</li><li>通常提供任何必要的异步时间相关硬件接口所需的中断处理。</li><li>由于现代硬件和操作系统的多样性，驱动程序在许多不同的环境中运行。驱动程序可能与<ul><li>打印机、扫描仪、网络适配器、网卡、声卡、硬盘等等相关</li></ul></li><li>显卡驱动就是用来<strong>驱动显卡的程序</strong>，它是硬件所对应的软件。</li><li>Free and open-source graphics device driver开源图像驱动<ul><li>大多数免费和开源图形设备驱动程序都是由<a href="https://en.wikipedia.org/wiki/Mesa_(computer_graphics)">Mesa开发的</a>项目。驱动程序由<a href="https://en.wikipedia.org/wiki/Compiler">编译器</a>、<a href="https://en.wikipedia.org/wiki/List_of_rendering_APIs">渲染 API</a>和管理图形硬件访问的软件组成。</li><li>驱动程序不开源不利于维护，因此目前多为开源</li><li>AMD 的专有驱动程序AMD Catalyst for their <strong>Radeon</strong>可用于 Microsoft Windows 和 Linux（以前称为 fglrx）</li><li>Nvidia的专有驱动程序Nvidia GeForce driver for GeForce适用于Windows x86 / x86-64、Linux x86/x86-64/ ARM、OS X 10.5及更高版本</li></ul></li></ol><p>因此如果利用GPU进行高效科学计算，需要先配置GPU的驱动及显卡驱动</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;设备&lt;a href=&quot;https://en.wikipedia.org/wiki/Device_driver&quot;&gt;驱动程序&lt;/a&gt;（Device Driver）——&lt;mark&gt;“硬件设备和系统之间的桥梁&lt;/mark&gt;”。相当于硬件的接口，操作系统只有通过这个接口控制硬件设备的工作，无需了解所使用硬件的准确细节。PC–&amp;gt;OS–&amp;gt;驱动–&amp;gt;硬件设备。&lt;/p&gt;</summary>
    
    
    
    <category term="计算机软硬件知识" scheme="https://hscyber.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="驱动" scheme="https://hscyber.github.io/tags/%E9%A9%B1%E5%8A%A8/"/>
    
    <category term="显卡驱动" scheme="https://hscyber.github.io/tags/%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Pandas(杂)：读取不同空格数的txt或csv</title>
    <link href="https://hscyber.github.io/posts/8a34f949/"/>
    <id>https://hscyber.github.io/posts/8a34f949/</id>
    <published>2022-10-19T11:00:04.000Z</published>
    <updated>2022-10-19T11:08:01.306Z</updated>
    
    <content type="html"><![CDATA[<p>今天处理数据时遇到一个特殊情况，正常数据表(txt格式)是按制表符（<mark>\t</mark>&gt;）分隔，其中最后两年的数据<strong>是不等数量的空格分列</strong>，因此需要统一格式。</p><span id="more"></span><p>原始如下图，最后处理成单个空格或制表符分隔，\t或默认</p><img src="/posts/8a34f949/image-20221019190325307.png" class alt="image-20221019190325307"><p>pandas可以读取csv txt等文本文件，<code>read_csv(sep=“\s”)</code>即可，示例：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> glob <span class="keyword">import</span> glob</span><br><span class="line">files = glob(<span class="string">r&quot;D:\气象局数据\天尺度气象数据\存档\201911-202106\*.txt&quot;</span>)</span><br><span class="line">outdir = <span class="string">r&quot;D:\气象局数据\天尺度气象数据\存档\201911-202106-2\\&quot;</span></span><br><span class="line"><span class="comment"># 遍历写出即可，head=None因为这里忽略表头</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    df = pd.read_csv(file, header=<span class="literal">None</span>,sep=<span class="string">&#x27;\s+&#x27;</span>, encoding = <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    df.to_csv(outdir+os.path.basename(file),index=<span class="literal">False</span>,header=<span class="literal">None</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>,sep=<span class="string">&#x27;\t&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天处理数据时遇到一个特殊情况，正常数据表(txt格式)是按制表符（&lt;mark&gt;\t&lt;/mark&gt;&amp;gt;）分隔，其中最后两年的数据&lt;strong&gt;是不等数量的空格分列&lt;/strong&gt;，因此需要统一格式。&lt;/p&gt;</summary>
    
    
    
    <category term="Pandas数据处理分析" scheme="https://hscyber.github.io/categories/Pandas%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Pandas" scheme="https://hscyber.github.io/tags/Pandas/"/>
    
    <category term="read_csv" scheme="https://hscyber.github.io/tags/read-csv/"/>
    
  </entry>
  
  <entry>
    <title>linux系统ubuntu22.04安装qgis</title>
    <link href="https://hscyber.github.io/posts/ec7147e8/"/>
    <id>https://hscyber.github.io/posts/ec7147e8/</id>
    <published>2022-10-19T10:40:56.000Z</published>
    <updated>2022-10-19T11:07:46.980Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下在ubuntu系统上安装qgis的过程，参考<a href="https://www.qgis.org/en/site/forusers/alldownloads.html#debian-ubuntu">qgis官方网站</a>及<a href="https://www.youtube.com/watch?v=vbZI1dya6io">youtube</a>。</p><span id="more"></span><h2 id="安装过程及命令记录"><a class="markdownIt-Anchor" href="#安装过程及命令记录"></a> 安装过程及命令记录</h2><blockquote><p>安装过程基本上是step by step，唯一需要转换一下的地方是添加源</p></blockquote><p>如果遇到443等问题和镜像有关，<strong>多执行几次</strong>一般就能通过，打开terminal(<code>ctrl+alt+t</code>)-复制命令(<code>ctrl + c</code>)-粘贴到命令行(<code>ctrl+shift+v</code>)，<code>enter</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gnupg software-properties-common</span><br><span class="line">sudo mkdir -m755 -p /etc/apt/keyrings # 22以上版本本命令可以省略</span><br><span class="line">sudo wget -O /etc/apt/keyrings/qgis-archive-keyring.gpg https://download.qgis.org/downloads/qgis-archive-keyring.gpg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加仓库源，这里也可以在软件与更新程序中内手动添加</span></span><br><span class="line">sudo add-apt-repository &quot;deb https://qgis.org/ubuntu $(lbs_release -c -s) main&quot;</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install qgis qgis-plugin-grass</span><br></pre></td></tr></table></figure><p>安装后在软件中即可找到，打开即可正常使用：</p><img src="/posts/ec7147e8/qgis.jpg" class alt="qgis">]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一下在ubuntu系统上安装qgis的过程，参考&lt;a href=&quot;https://www.qgis.org/en/site/forusers/alldownloads.html#debian-ubuntu&quot;&gt;qgis官方网站&lt;/a&gt;及&lt;a href=&quot;https://www.youtube.com/watch?v=vbZI1dya6io&quot;&gt;youtube&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="https://hscyber.github.io/categories/ubuntu/"/>
    
    
    <category term="QGIS" scheme="https://hscyber.github.io/tags/QGIS/"/>
    
    <category term="ubuntu" scheme="https://hscyber.github.io/tags/ubuntu/"/>
    
    <category term="软件安装" scheme="https://hscyber.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Pandas(2)：缺失值即空值na判断及其处理</title>
    <link href="https://hscyber.github.io/posts/74993542/"/>
    <id>https://hscyber.github.io/posts/74993542/</id>
    <published>2022-10-17T11:01:13.000Z</published>
    <updated>2022-11-27T13:36:18.034Z</updated>
    
    <content type="html"><![CDATA[<p>常用的pandas表格空值处理方式。如 (1) 删除包含空值的行或者列；(2) 填充某些列的空值为特定值；(3) 基于序列的插值。</p><span id="more"></span><h2 id="空值定义"><a class="markdownIt-Anchor" href="#空值定义"></a> 空值定义</h2><blockquote><p>读取dataframe表格输出的控制都显示为“NAN”，但是具体的情况可能存在一些差别</p></blockquote><p>pandas的数值类型基于numpy dtype，因此缺失值/空值也沿用了numpy。一些“<strong>空值</strong>”：</p><ol><li><strong>None/pd.NA</strong>：Python中的空值表示，即所有的空值指向同一个地址。<strong>NA含义为not available</strong></li><li><strong>pd.NaN</strong>：这是非常常见的一个空值，它不等于None也不等于np.nan，是一个特殊的浮点数。要对它进行判断需要使用<strong>pd.isna(x)</strong>。</li><li><strong>np.nan</strong>：该值是有值的，占内存，也是一个特殊的浮点数，因此<u>如果导出含NAN的数据会使得该列为浮点型，占用空间增大</u>。<strong>NAN含义为not a number</strong></li><li><strong>NaT</strong>：对于 datetime64[ns] 类型，使用<code>NaT</code>表示缺失值</li><li><mark>‘’</mark>：空字符串，这里实际上也是有值的，但字符串长度为0。</li></ol><p>如何<strong>判断</strong>是否为空值：<strong>df.isna(); df.notna();pd.isna(x)</strong>，会返回<strong>True/False</strong>。在此基础上可以进行进一步计算，如<u>df.loc[]的条件选择实际上就是基于中间的条件生成T/F的列然后进行mask筛选行列</u>，具体可以参见<a href="https://hscyber.github.io/posts/f9c7a8a1/#%E6%9D%A1%E4%BB%B6%E7%AD%9B%E9%80%89%E8%A1%8Cdfloc">之前的笔记</a>。</p><ul><li>isnull()函数==isna()函数，但推荐用后者，便于记忆，与填充及删除时一致。</li></ul><h2 id="值的处理"><a class="markdownIt-Anchor" href="#值的处理"></a> 值的处理</h2><p>什么时候对数值进行<strong>整列删除-意味着舍弃某指标</strong>或者<strong>整行删除-舍弃某条记录</strong>或者什么时候选择进行填充需要<font color="#dd0000">视具体的数据和需求</font>来确定。</p><h3 id="删除行或列dropna"><a class="markdownIt-Anchor" href="#删除行或列dropna"></a> 删除行或列dropna</h3><p>DataFrame.dropna(axis=0, how=[‘any’, ‘all’], thresh, subset=None, inplace=False…)</p><ul><li><strong>axis</strong>=0表示默认删除包含空值的<strong>行</strong></li><li><strong>subset</strong>用于指定某些列</li><li><strong>how</strong>表示是<strong>全部</strong>为None才删除还是<strong>只要存在</strong>None就删除</li><li><strong>thresh</strong>与how不能同时工作，表示<strong>删除多少个</strong></li></ul><p>常用<code>df.dropna(subset=[])</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除全部空的行</span></span><br><span class="line">df.dropna()</span><br><span class="line"><span class="comment"># 删除全部空的列</span></span><br><span class="line">df.dropna(axis=<span class="string">&#x27;columns&#x27;</span>)</span><br><span class="line">df.dropna(axis=<span class="number">1</span>)</span><br><span class="line">df.dropna(axis=<span class="number">1</span>, how=<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line"><span class="comment"># 只要存在空值就将列删除</span></span><br><span class="line">df.dropna(axis=<span class="number">1</span>, how=<span class="string">&#x27;any&#x27;</span>)</span><br><span class="line"><span class="comment"># 删除某些列中存在空值的行</span></span><br><span class="line">df.dropna(subset=[<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;toy&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="填充fillna"><a class="markdownIt-Anchor" href="#填充fillna"></a> 填充fillna</h3><p>常用的是<code>df.fillna(0)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">df</span><br><span class="line">     A    B   C    D</span><br><span class="line"><span class="number">0</span>  NaN  <span class="number">2.0</span> NaN  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">3.0</span>  <span class="number">4.0</span> NaN  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  NaN  NaN NaN  NaN</span><br><span class="line"><span class="number">3</span>  NaN  <span class="number">3.0</span> NaN  <span class="number">4.0</span></span><br><span class="line"><span class="comment"># 全部填充</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.fillna(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 给不同的列填充不同的值，A列填充0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>values = &#123;<span class="string">&quot;A&quot;</span>: <span class="number">0</span>, <span class="string">&quot;B&quot;</span>: <span class="number">1</span>, <span class="string">&quot;C&quot;</span>: <span class="number">2</span>, <span class="string">&quot;D&quot;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.fillna(value=values)</span><br><span class="line">     A    B    C    D</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">3.0</span>  <span class="number">4.0</span>  <span class="number">2.0</span>  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  <span class="number">0.0</span>  <span class="number">1.0</span>  <span class="number">2.0</span>  <span class="number">3.0</span></span><br><span class="line"><span class="number">3</span>  <span class="number">0.0</span>  <span class="number">3.0</span>  <span class="number">2.0</span>  <span class="number">4.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.fillna(value=values, limit=<span class="number">1</span>)<span class="comment"># 每一列只填充一次</span></span><br><span class="line">     A    B    C    D</span><br><span class="line"><span class="number">0</span>  <span class="number">0.0</span>  <span class="number">2.0</span>  <span class="number">2.0</span>  <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>  <span class="number">3.0</span>  <span class="number">4.0</span>  NaN  <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>  NaN  <span class="number">1.0</span>  NaN  <span class="number">3.0</span></span><br><span class="line"><span class="number">3</span>  NaN  <span class="number">3.0</span>  NaN  <span class="number">4.0</span></span><br></pre></td></tr></table></figure><h3 id="插值interpolate"><a class="markdownIt-Anchor" href="#插值interpolate"></a> 插值interpolate</h3><p>关于时间序列的插值可以参阅<a href="https://walkenho.github.io/interpolating-time-series-p1-pandas/">此处</a>，默认为线性插值(method=“linear”)，常用，但默认不会填充第一个空值，需要填充时可以加上<strong>limit_direction</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;a1&#x27;</span>] = df[<span class="string">&#x27;a&#x27;</span>].interpolate()</span><br><span class="line">df[<span class="string">&#x27;a1&#x27;</span>] = df[<span class="string">&#x27;a&#x27;</span>].interpolate(limit_direction=‘both’)</span><br><span class="line"><span class="comment"># 所有列进行填充</span></span><br><span class="line">df = df.interpolate(limit_direction=‘both’)</span><br></pre></td></tr></table></figure><p>多项式插值<code>df.interpolate(method='polynomial', order=2)</code></p><h2 id="参考学习"><a class="markdownIt-Anchor" href="#参考学习"></a> 参考学习</h2><ul><li><p><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html">文档参考</a></p></li><li><p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna">df.dropna()</a></p></li><li><p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna">df.fillna()</a></p></li><li><p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate">df.interpolate()</a></p></li><li><p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace">df.replace()</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;常用的pandas表格空值处理方式。如 (1) 删除包含空值的行或者列；(2) 填充某些列的空值为特定值；(3) 基于序列的插值。&lt;/p&gt;</summary>
    
    
    
    <category term="Pandas数据处理分析" scheme="https://hscyber.github.io/categories/Pandas%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Pandas" scheme="https://hscyber.github.io/tags/Pandas/"/>
    
    <category term="dropna" scheme="https://hscyber.github.io/tags/dropna/"/>
    
    <category term="fillna" scheme="https://hscyber.github.io/tags/fillna/"/>
    
    <category term="interpolate" scheme="https://hscyber.github.io/tags/interpolate/"/>
    
  </entry>
  
  <entry>
    <title>对近来生活的思考和一点自我反思</title>
    <link href="https://hscyber.github.io/posts/1d48db90/"/>
    <id>https://hscyber.github.io/posts/1d48db90/</id>
    <published>2022-10-11T12:49:13.000Z</published>
    <updated>2022-11-24T08:16:31.380Z</updated>
    
    <content type="html"><![CDATA[<p>尽管时间不差多少，但相较于上半年，下半年的时间过起来总是会格外地快，快到仿佛我再不记点什么就马上回跨到下一个年头……</p><span id="more"></span><h3 id="闲言碎语-不知所云"><a class="markdownIt-Anchor" href="#闲言碎语-不知所云"></a> 闲言碎语-不知所云</h3><blockquote><p>人是一根会思考的芦苇</p></blockquote><p>兴许是下意识将78月归入上半年，将9月视作新的开始，才觉得过得飞快，当然，和秋冬的恶劣天气也脱不了关系。不知不觉现在我也已经进入了读研的第三年，说不出的滋味。抛开一如既往此起彼伏的北京疫情，这几个月我算是无所顾忌地在开始着各种尝试，对于自身和很多东西的看法有了不少的改变，当然，这种尝试是需要成本的，有时还会让人倍感疲惫。</p><p>这几个月工作之余，大量的课外阅读，频繁的运动与奔跑，持续的思索与记录，积极拥抱小团体，勇敢找寻一些自己的热爱和兴趣，让我的生活不再像之前那样“沉重”而“单调”，收获颇丰，但回过头来看，人的精力和目光是有限的，有些东西是牢固的，这种状态不可持续，慢慢地就暴露了一些问题，有浮躁及矫枉过正之嫌。</p><p>最大的收获大致在于：认识到了人的有限性和平凡，接纳和更好地认识了自己，自己的特质与优缺点，也认识到了人具有的巨大潜力和可塑性，没有什么是不能够改变的，缺的是主动性、认知、勇气、行动，没有那么多借口。焦虑是允许的，积极拥抱。每天我们都在做着对抗，与人生来的惰性、刺激与享乐、逃避痛苦而对抗，少有人能够做到极致，除非是极致的热爱。我便在这中间寻找一个地方踏步，并努力地向着另一端慢慢行进。我不再向过去那样思考人生的意义，因为这短短的一生，值得追寻的，除却对自我的认知和探求，余下的是大概是爱情与工作/事业。</p><p>我们好像讨厌工作，抗拒工作，将之视为一种别无选择被迫做的事情，即来自身处社会和人际关系中的外界压力与其所赋予我们的责任。<strong>但慢慢地我发觉，有些东西，一些无可替代的幸福感和平静，我们也别无选择，只能够从劳动中获得</strong>，或许也可以称之为工作，当然，我更愿意称其为创造。像绘画与雕塑、像音乐、像科学、像书作……在劳动中创造价值和表达自我，开拓自己心中的森林。警惕被动而不加思考地比较与自欺，罗翔老师说，内卷的本质是不把人当人。虽然我知道好像不只是内卷如此。</p><p><strong>我们来的时候，什么也没有，不妨大胆一些。二十几岁的年纪，我们不可能做到什么都有，而且每个人真正属于自己的东西，其实都不多</strong>。不少人说，25岁之后人才真正成年。我想，这肯定也是个虚数，即便是从生理上看，毕竟人与人是不一样的，生长过程和经历的人生阶段也各自不同。但是，二十几岁的年纪，一个人再天才再有帮助，所能达到的水平也是有限的，更确切的说，属于他自己的那些东西定然是有限的。不会有完美的人，我们不得不去经历，才能成长。有人在小地方吭哧吭哧长大然后投身人海，有人在繁华都市一步步走向聚光灯和舞台，不同的时间造就不同的人，并无好与坏之分，他有的别人或许没有，但有些人有的，他可能永远也无法收获。每个人都有一些面是智者，一些面是残者。。</p><p>我们都有自己的道路，不应被时间和他人或是什么其他的东西而定义自己或是自己的阶段，只需要<font color="#dd0000">勇敢地走上人生旅途</font>。</p><h3 id="关于提高效率的几点反思"><a class="markdownIt-Anchor" href="#关于提高效率的几点反思"></a> 关于提高效率的几点反思。</h3><blockquote><p>热爱、爱、渴望和目标永远是最纯净的力量源泉。</p></blockquote><ol><li><strong>减少精力和注意力的分散，我们不可能同时盯着很多条进程，大脑CPU的核数和资源都是有限的，适当地削减和调整该资源的分配</strong>。要事第一，当然，或许需要割舍一些次重要的东西，这会难受，但是大多值得。</li><li>我们<strong>不可能什么都有，适当遏止内心纷繁的一些渴望</strong>。减少虚荣，<strong>我们远比我们想象中得难以自我察觉、控制情绪和抵制诱惑</strong>。不能抵挡诱惑就关闭通道，关闭信息通报，比如你可以考虑取关你80%+的公众号，卸掉占据大量时间的ap。而投入眼前的工作，并找寻一些兴趣与热爱。</li><li>不要被时间或节点所限制，将目光聚焦在所做的事情。也即是让一件一件的小事情成为生活的最小分割，而不是1分钟一小时，当然并不是不考虑时间，而是<strong>不需要过分盯着数着时间点做事情，而聚焦到事情本身的完成度上</strong>。可能因为我自己有些强迫症的缘故才会这样~比如说，我知道1个月之后某某答辩，我只需要在此之前花费特定的时间完成准备好即可，而不是一个月都要在做这个事情。比如我规定自己12.30之前要睡觉，并不是说我回去早了就要先玩手机干别的到了这个点才睡，该做的事情做完了就可以睡觉，对我而言，起床亦是如此。</li><li><strong>不要事事都抱着等有充足准备之后再开始做的念头</strong>。You can never be ready. 我们非常喜欢做好充足准备后再开始做任何工作和事情，也就是做有把握的事情，但是真正关键的时刻往往不会让我们准备好，包括那些可能改变我们命运的大时刻，我们就是该硬着头皮去做一些事情，会有更加促进我们的跃升，比如我不可能等学好了什么什么才能开始做东西。</li><li>接上，<strong>不要过度准备和过分焦虑</strong>。假如做事都要面面顾到，那就什么事情都不能做了。事情完成到一定程度即可，锦上添花的事情很多时候是非必要的。<u>焦虑适度即可，不要为太远的事情而担忧，像珍惜礼物那样珍惜今天。对于不可控的事情，我们要保持乐观和自信，对于可控的事情，我们要保持谨慎和节制。</u>对于不可控的事情，说白了，焦虑和恐惧于事无补，焦虑改变不了明天，反而会影响今天的心情，恐惧也改变不了明天，因为人生唯一应该恐惧的就是恐惧本身；但是对于可控的事情，能不能好好利用时间，这是可控的，你要谨慎你要节制，因为如果不谨慎不节制就会乐极生悲。</li><li>难过无法自抑压抑不能自释的时候-多寻求帮助与关怀，我知道失望与难过很难感同身受，但倾述和释放会让我们好很多。</li><li>坚持适当运动和阅读，培养一两个兴趣爱好，可以的话，和志趣相投小伙伴一起。有同伴很多时候会让我们做事情更具热情。</li><li>早睡早起，该下班就下班，比如现在，不要用今天来弥补昨天，也不要预支明天。</li><li>……</li></ol><p>2022/10/11 22:59</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;尽管时间不差多少，但相较于上半年，下半年的时间过起来总是会格外地快，快到仿佛我再不记点什么就马上回跨到下一个年头……&lt;/p&gt;</summary>
    
    
    
    <category term="生活漫步" scheme="https://hscyber.github.io/categories/%E7%94%9F%E6%B4%BB%E6%BC%AB%E6%AD%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>matplotlib基础(6)：绘制多图的精准布局</title>
    <link href="https://hscyber.github.io/posts/cddc42b6/"/>
    <id>https://hscyber.github.io/posts/cddc42b6/</id>
    <published>2022-10-09T09:10:11.000Z</published>
    <updated>2022-10-11T15:07:12.825Z</updated>
    
    <content type="html"><![CDATA[<p>作图时经常需要<mark>绘制多幅图并进行布局调整</mark>，……。</p><span id="more"></span><h2 id="出草图"><a class="markdownIt-Anchor" href="#出草图"></a> 出草图</h2><h2 id="常规布局"><a class="markdownIt-Anchor" href="#常规布局"></a> 常规布局</h2><h2 id="高级布局"><a class="markdownIt-Anchor" href="#高级布局"></a> 高级布局</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;作图时经常需要&lt;mark&gt;绘制多幅图并进行布局调整&lt;/mark&gt;，……。&lt;/p&gt;</summary>
    
    
    
    <category term="Python可视化" scheme="https://hscyber.github.io/categories/Python%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
    <category term="Python" scheme="https://hscyber.github.io/tags/Python/"/>
    
    <category term="Matplotlib" scheme="https://hscyber.github.io/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib基础(5)：文本与辅助线的添加及属性设置</title>
    <link href="https://hscyber.github.io/posts/4c34a09/"/>
    <id>https://hscyber.github.io/posts/4c34a09/</id>
    <published>2022-10-05T08:30:11.000Z</published>
    <updated>2022-10-09T09:19:30.703Z</updated>
    
    <content type="html"><![CDATA[<p>如果在图中的适当位置<mark>添加辅助线及文本，并设置其属性</mark>，……。</p><span id="more"></span><h2 id="文本属性与布局"><a class="markdownIt-Anchor" href="#文本属性与布局"></a> 文本属性与布局</h2><blockquote><p><a href="https://matplotlib.org/devdocs/tutorials/text/text_props.html">详细可参考</a></p></blockquote><h2 id="axtext文本"><a class="markdownIt-Anchor" href="#axtext文本"></a> ax.text文本</h2><blockquote><p><a href="https://matplotlib.org/devdocs/api/_as_gen/matplotlib.axes.Axes.text.html">api</a></p></blockquote><h2 id="辅助线"><a class="markdownIt-Anchor" href="#辅助线"></a> 辅助线</h2><h3 id="axvlines垂直线"><a class="markdownIt-Anchor" href="#axvlines垂直线"></a> ax.vlines垂直线</h3><blockquote><p>Axes.vlines(x, ymin, ymax, …)——Plot <strong>vertical</strong> lines at each <em>x</em> from <em>ymin</em> to <em>ymax</em>.</p></blockquote><h3 id="axhlines水平线"><a class="markdownIt-Anchor" href="#axhlines水平线"></a> ax.hlines水平线</h3><blockquote><p>Axes.hlines(y, xmin, xmax,…)——Plot <strong>horizontal</strong> lines at each <em>y</em> from <em>xmin</em> to <em>xmax</em>.</p></blockquote><h3 id="axline任意线"><a class="markdownIt-Anchor" href="#axline任意线"></a> axline任意线</h3><blockquote><p>可以绘制斜线，如回归拟合线<a href="https://matplotlib.org/devdocs/gallery/specialty_plots/anscombe.html#sphx-glr-gallery-specialty-plots-anscombe-py">example</a>——Axes.axline(xy1, xy2=None, *, slope=None)…</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果在图中的适当位置&lt;mark&gt;添加辅助线及文本，并设置其属性&lt;/mark&gt;，……。&lt;/p&gt;</summary>
    
    
    
    <category term="Python可视化" scheme="https://hscyber.github.io/categories/Python%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
    <category term="Python" scheme="https://hscyber.github.io/tags/Python/"/>
    
    <category term="Matplotlib" scheme="https://hscyber.github.io/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib基础(4)：绘图坐标系及注释位置控制</title>
    <link href="https://hscyber.github.io/posts/66a3b602/"/>
    <id>https://hscyber.github.io/posts/66a3b602/</id>
    <published>2022-10-05T06:47:54.000Z</published>
    <updated>2022-10-09T09:02:36.519Z</updated>
    
    <content type="html"><![CDATA[<p>绘制图形首先需要明确使用的坐标参考系，通常该操作为默认，但在<mark>图形内添加文本、辅助线、箭头、图例等装说明时常用</mark>，如可将文本放置在每张图想要的位置如正中间(0.5, 0.5)而不需要关心具体数值。由于自己之前作图遇到过，还增加了一个<strong>绘制固定大小正圆</strong>的实现方式。</p><span id="more"></span><h2 id="坐标系及转换"><a class="markdownIt-Anchor" href="#坐标系及转换"></a> 坐标系及转换</h2><h3 id="基础坐标变换"><a class="markdownIt-Anchor" href="#基础坐标变换"></a> 基础坐标变换</h3><blockquote><p><a href="https://matplotlib.org/stable/tutorials/advanced/transforms_tutorial.html">详细介绍</a></p></blockquote><p>除了画布的坐标系（NFC, 0-1）<code>fig.transFigure</code>,画布像素坐标系（FC, pixels）<code>fig.dpi_scale_trans</code>，还包括数据本身的坐标系（DC）<code>ax.transData</code>以及标准化的坐标系（NDC, 0-1）<code>ax.transAxes</code>。</p><img src="/posts/66a3b602/cs.png" class><p>不同坐标之间的变换，即如何从一个坐标系中的数值转换到对应的目标坐标系的数值。会用到的通常只有DC_to_FC、DC_to_NDC、DC_to_NFC，即从数值转到其它坐标系，使用方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="comment"># 函数重命名</span></span><br><span class="line">DC_to_FC = ax.transData.transform</span><br><span class="line">FC_to_DC = ax.transData.inverted().transform</span><br><span class="line">NDC_to_FC = ax.transAxes.transform</span><br><span class="line">FC_to_NDC = ax.transAxes.inverted().transform</span><br><span class="line">NFC_to_FC = fig.transFigure.transform</span><br><span class="line">FC_to_NFC = fig.transFigure.inverted().transform</span><br><span class="line">DC_to_NDC = <span class="keyword">lambda</span> x: FC_to_NDC(DC_to_FC(x))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>, <span class="number">5</span>), dpi=<span class="number">100</span>)</span><br><span class="line">ax = fig.add_subplot(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ax.set_xlim(<span class="number">0</span>, <span class="number">360</span>)</span><br><span class="line">ax.set_ylim(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(NFC_to_FC([<span class="number">1</span>, <span class="number">1</span>]))</span><br><span class="line"><span class="comment"># (600,500)</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">源坐标系</th><th style="text-align:center">目标坐标系</th><th style="text-align:center">简写</th><th style="text-align:center">转换函数</th></tr></thead><tbody><tr><td style="text-align:center">数据x-y</td><td style="text-align:center">画布pixels</td><td style="text-align:center">DC_to_FC</td><td style="text-align:center">ax.transData.transform</td></tr><tr><td style="text-align:center">画布pixels</td><td style="text-align:center">数据x-y</td><td style="text-align:center">FC_to_DC</td><td style="text-align:center">ax.transData.inverted().transform</td></tr><tr><td style="text-align:center">数据x-y</td><td style="text-align:center">数据0-1</td><td style="text-align:center">DC_to_NDC</td><td style="text-align:center">lambda x: FC_to_NDC(DC_to_FC(x))</td></tr><tr><td style="text-align:center">数据x-y</td><td style="text-align:center">画布0-1</td><td style="text-align:center">DC_to_NFC</td><td style="text-align:center">lambda x: FC_to_NFC(DC_to_FC(x))</td></tr><tr><td style="text-align:center">数据0-1</td><td style="text-align:center">画布pixels</td><td style="text-align:center">NDC_to_FC</td><td style="text-align:center">ax.transAxes.transform</td></tr><tr><td style="text-align:center">画布pixels</td><td style="text-align:center">数据0-1</td><td style="text-align:center">FC_to_NDC</td><td style="text-align:center">ax.transAxes.inverted().transform</td></tr><tr><td style="text-align:center">画布0-1</td><td style="text-align:center">画布pixels</td><td style="text-align:center">NFC_to_FC</td><td style="text-align:center">fig.transFigure.transform</td></tr><tr><td style="text-align:center">画布pixels</td><td style="text-align:center">画布0-1</td><td style="text-align:center">FC_to_NFC</td><td style="text-align:center">fig.transFigure.inverted().transform</td></tr></tbody></table><h3 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h3><p>下图展示了各种变换方式的应用：</p><ul><li>transform=ax.transAxes：使用标准化坐标表示位置，即用<strong>百分比</strong>（0.5,0.5）表示将注释放在<strong>正中间</strong></li><li>transform= transforms.blended_transform_factory(ax.transData, ax.transAxes)：X轴使用数据，Y使用<strong>百分比</strong>确定文本的初始位置，同理transY相反</li><li>见画圆时案例-transform=fig.dpi_scale_trans + ScaledTranslation(x0, y0, ax.transData)：使用像素的坐标系，但是添加偏移量使得图形从ax的左下角开始绘制</li></ul><img src="/posts/66a3b602/ex2.png" class alt="ex2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> matplotlib.patches <span class="keyword">as</span> mpatches</span><br><span class="line"><span class="keyword">from</span> matplotlib.transforms <span class="keyword">import</span> ScaledTranslation</span><br><span class="line"></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;figure.dpi&#x27;</span>] = <span class="number">120</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.size&#x27;</span>]=<span class="number">10.5</span></span><br></pre></td></tr></table></figure><p><mark>案例1-文本注释</mark>：对应上方前三幅图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># matplotlib是行优先的，也就是索引先数行再列</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">ax.text(<span class="number">0.05</span>, <span class="number">0.85</span>, <span class="string">&quot;(0.05, 0.85)&quot;</span>, transform=ax.transAxes,</span><br><span class="line">        fontsize=<span class="number">8</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>, va=<span class="string">&#x27;top&#x27;</span>)</span><br><span class="line">ax.scatter(<span class="number">0.05</span>,<span class="number">0.85</span>,s=<span class="number">5</span>,c=<span class="string">&#x27;r&#x27;</span>,transform=ax.transAxes)</span><br><span class="line"><span class="comment"># *************************************************************</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">transX = transforms.blended_transform_factory(</span><br><span class="line">    ax.transData, ax.transAxes)</span><br><span class="line">ax.text(<span class="number">3</span>, <span class="number">0.5</span>, <span class="string">&quot;(3, 0.5)&quot;</span>, transform=transX,</span><br><span class="line">        fontsize=<span class="number">8</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>, va=<span class="string">&#x27;top&#x27;</span>)</span><br><span class="line">ax.scatter(<span class="number">3</span>,<span class="number">0.5</span>,s=<span class="number">5</span>,c=<span class="string">&#x27;r&#x27;</span>,transform=transX)</span><br><span class="line"><span class="comment"># *************************************************************</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">transY = transforms.blended_transform_factory(</span><br><span class="line">    ax.transAxes, ax.transData)</span><br><span class="line">ax.text(<span class="number">0.5</span>, <span class="number">4</span>, <span class="string">&quot;(0.5, 4)&quot;</span>, transform=transY,</span><br><span class="line">        fontsize=<span class="number">8</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>, va=<span class="string">&#x27;top&#x27;</span>)</span><br><span class="line">ax.scatter(<span class="number">0.5</span>,<span class="number">4</span>,s=<span class="number">5</span>,c=<span class="string">&#x27;r&#x27;</span>,transform=transY)</span><br></pre></td></tr></table></figure><p><mark>案例2-绘固定的圆形</mark>：对应图4 图5，不转换的画绘制圆形会因为XY像素比例不一致而变形，注意圆半径r的单位是英寸，此处画布的大小为10*6英寸</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>,<span class="number">6</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">circ = mpatches.Circle((<span class="number">0.5</span>, <span class="number">0.5</span>), radius=<span class="number">0.25</span>, transform=ax.transAxes,</span><br><span class="line">                       facecolor=<span class="string">&#x27;blue&#x27;</span>, alpha=<span class="number">0.75</span>)</span><br><span class="line">ax.add_patch(circ)</span><br><span class="line">ax.scatter(<span class="number">0.5</span>,<span class="number">0.5</span>,s=<span class="number">5</span>,c=<span class="string">&#x27;r&#x27;</span>,transform=ax.transAxes)</span><br><span class="line"><span class="comment"># *************************************************************</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>,<span class="number">6</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">x0, y0 = <span class="number">3</span>, <span class="number">4</span> <span class="comment"># 圆心</span></span><br><span class="line">offset = ScaledTranslation(x0, y0, ax.transData)</span><br><span class="line"></span><br><span class="line">circ = mpatches.Circle((<span class="number">0</span>, <span class="number">0</span>), radius=<span class="number">0.5</span>, transform=fig.dpi_scale_trans + offset,</span><br><span class="line">                       facecolor=<span class="string">&#x27;g&#x27;</span>, alpha=<span class="number">0.75</span>)</span><br><span class="line">ax.add_patch(circ)</span><br><span class="line">ax.scatter(x0,y0,c=<span class="string">&#x27;r&#x27;</span>)</span><br></pre></td></tr></table></figure><p><mark>案例3-矩形注释</mark>，对应图6</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ax = fig.add_subplot(<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">x = np.random.randn(<span class="number">1000</span>)</span><br><span class="line">ax.hist(x, <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">transX = transforms.blended_transform_factory(</span><br><span class="line">    ax.transData, ax.transAxes)</span><br><span class="line">    <span class="comment"># 变换X为数据坐标，y为标准化的值，宽度也相应变换</span></span><br><span class="line">rect = mpatches.Rectangle((-<span class="number">1.5</span>, <span class="number">0</span>), width=<span class="number">2.5</span>, height=<span class="number">0.8</span>, transform=transX,</span><br><span class="line">                          color=<span class="string">&#x27;yellow&#x27;</span>, alpha=<span class="number">0.7</span>)</span><br><span class="line">ax.add_patch(rect)</span><br></pre></td></tr></table></figure><h3 id="图外注释添加"><a class="markdownIt-Anchor" href="#图外注释添加"></a> 图外注释添加</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.transforms <span class="keyword">import</span> blended_transform_factory, ScaledTranslation</span><br><span class="line"><span class="comment"># 长6英寸</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ax = fig.add_subplot(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, aspect=<span class="number">1</span>)</span><br><span class="line">ax.set_xlim(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">ax.set_xticks(<span class="built_in">range</span>(<span class="number">11</span>))</span><br><span class="line">ax.set_ylim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">ax.set_xticks(<span class="built_in">range</span>(<span class="number">11</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># dy = 3*12/72英寸 ，往外偏移</span></span><br><span class="line">point = <span class="number">1</span> / <span class="number">72</span></span><br><span class="line">fontsize = <span class="number">12</span></span><br><span class="line">dx, dy = <span class="number">0</span>, -<span class="number">3</span> * fontsize * point</span><br><span class="line">offset = ScaledTranslation(dx, dy, fig.dpi_scale_trans)</span><br><span class="line">transform = blended_transform_factory(ax.transData, ax.transAxes + offset)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">    plt.text(x, <span class="number">0</span>, <span class="string">&quot;↑&quot;</span>, transform=transform, ha=<span class="string">&quot;center&quot;</span>, va=<span class="string">&quot;top&quot;</span>, fontsize=fontsize)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/posts/66a3b602/ex3.png" class alt="ex2"><h3 id="公式或辅助线或箭头注释的案例"><a class="markdownIt-Anchor" href="#公式或辅助线或箭头注释的案例"></a> 公式或辅助线或箭头注释的案例</h3><p>关于注释的内容比较多，置于后续展开参考</p><ol><li><a href="https://matplotlib.org/devdocs/tutorials/text/annotations.html">Annotating text with Matplotlib.</a></li><li><a href="https://matplotlib.org/devdocs/api/_as_gen/matplotlib.axes.Axes.annotate.html">ax.annotate</a>，下方有很多案例，如：</li></ol><img src="/posts/66a3b602/annotate0.png" class alt="annotate0"><img src="/posts/66a3b602/annotate1.png" class alt="annotate0"><img src="/posts/66a3b602/annotate5.png" class alt="annotate0"><img src="/posts/66a3b602/annotate2.png" class alt="annotate0"><img src="/posts/66a3b602/annotate3.png" class alt="annotate0"><img src="/posts/66a3b602/annotate4.png" class alt="annotate0"><h2 id="极坐标"><a class="markdownIt-Anchor" href="#极坐标"></a> 极坐标</h2><blockquote><p>暂不展开</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;绘制图形首先需要明确使用的坐标参考系，通常该操作为默认，但在&lt;mark&gt;图形内添加文本、辅助线、箭头、图例等装说明时常用&lt;/mark&gt;，如可将文本放置在每张图想要的位置如正中间(0.5, 0.5)而不需要关心具体数值。由于自己之前作图遇到过，还增加了一个&lt;strong&gt;绘制固定大小正圆&lt;/strong&gt;的实现方式。&lt;/p&gt;</summary>
    
    
    
    <category term="Python可视化" scheme="https://hscyber.github.io/categories/Python%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
    <category term="Python" scheme="https://hscyber.github.io/tags/Python/"/>
    
    <category term="Matplotlib" scheme="https://hscyber.github.io/tags/Matplotlib/"/>
    
    <category term="transform" scheme="https://hscyber.github.io/tags/transform/"/>
    
    <category term="fig.transFigure" scheme="https://hscyber.github.io/tags/fig-transFigure/"/>
    
    <category term="ax.transAxes" scheme="https://hscyber.github.io/tags/ax-transAxes/"/>
    
    <category term="ax.transData" scheme="https://hscyber.github.io/tags/ax-transData/"/>
    
    <category term="文本注释" scheme="https://hscyber.github.io/tags/%E6%96%87%E6%9C%AC%E6%B3%A8%E9%87%8A/"/>
    
    <category term="辅助线" scheme="https://hscyber.github.io/tags/%E8%BE%85%E5%8A%A9%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Python环境(5)：win/linux配置即用conda环境以运行脚本</title>
    <link href="https://hscyber.github.io/posts/d452592e/"/>
    <id>https://hscyber.github.io/posts/d452592e/</id>
    <published>2022-09-18T14:55:22.000Z</published>
    <updated>2022-10-25T13:00:42.433Z</updated>
    
    <content type="html"><![CDATA[<p>【conda基础环境完结篇5】前面已经记录了一些<a href="https://hscyber.github.io/tags/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">基础概念和如何安装配置环境</a>，这里<mark>共享我本机的conda环境（涵盖常见矢量栅格处理包）</mark>，可以直接下载yml文件安装，安装完即可用，也可在其他系统中直接安装如ubuntu系统，输入相应的命令完成配置。所以如果从0开始配置环境的话，只需参照<a href="https://hscyber.github.io/posts/9089f596/">Python环境(2)</a>及本博客。</p><span id="more"></span><h2 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h2><h3 id="window下环境配置"><a class="markdownIt-Anchor" href="#window下环境配置"></a> Window下环境配置</h3><blockquote><p>如果需要安装其他包自行再安装即可，我使用的是3.9的Python环境，当前GIS数据处理推荐</p></blockquote><p>这里是我导出的<a href="https://github.com/HSCyber/Data_public/blob/main/Conda_env/geop20220918.yml">yml文件</a>，下载后通过命令行或者Anaconda Prompt进入base环境，路径自行修改，<font color="#dd0000">如果需要自定义环境名称请使用文本编辑器打开yml文件第一行修改</font>。安装完后激活使用即可（不需要梯子可完成安装，如遇网路问题多试几次），</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) C:\Users\huangs\Desktop\test&gt;conda env create -f C:\Users\huangs\Desktop\test\geop20220918.yml</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">激活环境</span></span><br><span class="line">(base) C:\Users\huangs\Desktop\test&gt;conda activate geop</span><br></pre></td></tr></table></figure><p>也可以自己<strong>手动执行</strong>如下命令，尽管用到的包很多，但是由于<mark>包之间的依赖关系</mark>，仅安装部分包就可以完成大量包的安装，如先安装geopandas会安装依赖fiona,gdal, hdf4, hdf5, networkx, shapely, numpy, pandas, scipy, pillow, requests, scikit-learn等等包，非常省事，其中安装openpyxl是pandas导出xlsx文件的需要。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">conda create -n geop python=3.9</span><br><span class="line">conda activate geop</span><br><span class="line">conda install -c conda-forge geopandas</span><br><span class="line">conda install -c conda-forge rasterio rasterstats</span><br><span class="line">conda install -c conda-forge netcdf4</span><br><span class="line">conda install -c anaconda openpyxl</span><br><span class="line">conda install -c conda-forge matplotlib seaborn bokeh cartopy  </span><br><span class="line">conda install -c conda-forge ipykernel</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可选，如果需要使用jupyter lab或者jupyter notebook的安装</span></span><br><span class="line">conda install -c conda-forge jupyterlab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者conda install -c conda-forge jupyter notebook</span></span><br></pre></td></tr></table></figure><h3 id="linux环境配置"><a class="markdownIt-Anchor" href="#linux环境配置"></a> linux环境配置</h3><blockquote><p>不能使用yml文件直接安装，有些包安装不了</p></blockquote><p>以下过程在ubuntu22.04系统运行无误</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过命令行或者Anaconda Prompt进入base环境</span></span><br><span class="line">conda create -n geop python=3.9</span><br><span class="line">conda activate geop</span><br><span class="line">conda install -c conda-forge geopandas</span><br><span class="line">conda install -c conda-forge rasterio rasterstats</span><br><span class="line">conda install -c conda-forge netcdf4</span><br><span class="line">conda install -c anaconda openpyxl</span><br><span class="line">conda install -c conda-forge matplotlib seaborn bokeh cartopy  </span><br><span class="line">conda install -c conda-forge ipykernel</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可选</span></span><br><span class="line">conda install -c conda-forge jupyterlab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者conda install -c conda-forge jupyter notebook</span></span><br></pre></td></tr></table></figure><h3 id="选读本机win测试安装过程"><a class="markdownIt-Anchor" href="#选读本机win测试安装过程"></a> (选读)本机win测试安装过程</h3><p>记录了一下测试的全过程，从<strong>创建到安装到删除环境</strong>，方便查看依赖和回顾，也可以看到哪些包占空间大。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br></pre></td><td class="code"><pre><span class="line">(base) C:\Users\huangs\Desktop\test&gt;conda create -n geop python=3.9</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Package Plan ##</span></span></span><br><span class="line"></span><br><span class="line">  environment location: D:\Miniconda3\envs\geop</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - python=3.9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    ca-certificates-2022.9.14  |       h5b45459_0         189 KB  conda-forge</span><br><span class="line">    libzlib-1.2.12             |       hcfcfb64_3          71 KB  conda-forge</span><br><span class="line">    openssl-3.0.5              |       hcfcfb64_2         7.8 MB  conda-forge</span><br><span class="line">    python-3.9.13              |hcf16a7b_0_cpython        17.9 MB  conda-forge</span><br><span class="line">    tzdata-2022c               |       h191b570_0         119 KB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:        26.1 MB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To activate this environment, use</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#     $ conda activate geop</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To deactivate an active environment, use</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#     $ conda deactivate</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(base) C:\Users\huangs\Desktop\test&gt;conda activate geop</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge geopandas</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Package Plan ##</span></span></span><br><span class="line"></span><br><span class="line">  environment location: D:\Miniconda3\envs\geop</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - geopandas</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    attrs-22.1.0               |     pyh71513ae_1          48 KB  conda-forge</span><br><span class="line">    boost-cpp-1.78.0           |       h9f4b32c_1        17.1 MB  conda-forge</span><br><span class="line">    brotlipy-0.7.0             |py39hb82d6ee_1004         329 KB  conda-forge</span><br><span class="line">    cairo-1.16.0               |    hd694305_1013         2.3 MB  conda-forge</span><br><span class="line">    certifi-2022.9.14          |     pyhd8ed1ab_0         156 KB  conda-forge</span><br><span class="line">    cffi-1.15.1                |   py39h0878f49_0         223 KB  conda-forge</span><br><span class="line">    charset-normalizer-2.1.1   |     pyhd8ed1ab_0          36 KB  conda-forge</span><br><span class="line">    click-8.1.3                |   py39hcbf5309_0         146 KB  conda-forge</span><br><span class="line">    contourpy-1.0.5            |   py39h1f6ef14_0         173 KB  conda-forge</span><br><span class="line">    fiona-1.8.21               |   py39h0a5cb73_2         892 KB  conda-forge</span><br><span class="line">    fonttools-4.37.2           |   py39ha55989b_0         1.7 MB  conda-forge</span><br><span class="line">    freetype-2.12.1            |       h546665d_0         506 KB  conda-forge</span><br><span class="line">    gdal-3.5.2                 |   py39hddddcaf_0         1.6 MB  conda-forge</span><br><span class="line">    hdf4-4.2.15                |       h0e5069d_4         1.1 MB  conda-forge</span><br><span class="line">    hdf5-1.12.2                |nompi_h57737ce_100        24.0 MB  conda-forge</span><br><span class="line">    joblib-1.2.0               |     pyhd8ed1ab_0         205 KB  conda-forge</span><br><span class="line">    kealib-1.4.15              |       hdf81f3a_1         159 KB  conda-forge</span><br><span class="line">    kiwisolver-1.4.4           |   py39h2e07f2f_0          61 KB  conda-forge</span><br><span class="line">    lerc-4.0.0                 |       h63175ca_0         190 KB  conda-forge</span><br><span class="line">    libdeflate-1.14            |       hcfcfb64_0          73 KB  conda-forge</span><br><span class="line">    libgdal-3.5.2              |       hec59f66_0         9.5 MB  conda-forge</span><br><span class="line">    libkml-1.3.0               |    hf2ab4e4_1015         2.9 MB  conda-forge</span><br><span class="line">    libnetcdf-4.8.1            |nompi_h85765be_104         676 KB  conda-forge</span><br><span class="line">    libpng-1.6.38              |       h19919ed_0         773 KB  conda-forge</span><br><span class="line">    libpq-14.5                 |       h1ea2d34_0         3.9 MB  conda-forge</span><br><span class="line">    libssh2-1.10.0             |       h9a1e1f7_3         228 KB  conda-forge</span><br><span class="line">    libtiff-4.4.0              |       h8e97e67_4         1.1 MB  conda-forge</span><br><span class="line">    libwebp-base-1.2.4         |       h8ffe710_0         328 KB  conda-forge</span><br><span class="line">    libxml2-2.9.14             |       hf5bbc77_4         3.4 MB  conda-forge</span><br><span class="line">    libzip-1.9.2               |       h519de47_1         143 KB  conda-forge</span><br><span class="line">    markupsafe-2.1.1           |   py39hb82d6ee_1          25 KB  conda-forge</span><br><span class="line">    matplotlib-base-3.6.0      |   py39haf65ace_0         7.5 MB  conda-forge</span><br><span class="line">    networkx-2.8.6             |     pyhd8ed1ab_0         1.6 MB  conda-forge</span><br><span class="line">    numpy-1.23.3               |   py39h9061af7_0         6.3 MB  conda-forge</span><br><span class="line">    openjpeg-2.5.0             |       hc9384bd_1         256 KB  conda-forge</span><br><span class="line">    pandas-1.4.4               |   py39h80a8885_0        11.2 MB  conda-forge</span><br><span class="line">    pillow-9.2.0               |   py39hcef8f5f_2        45.2 MB  conda-forge</span><br><span class="line">    poppler-22.04.0            |       hb57f792_3         2.7 MB  conda-forge</span><br><span class="line">    postgresql-14.5            |       he353ca9_0        23.3 MB  conda-forge</span><br><span class="line">    pyproj-3.4.0               |   py39h2de216b_0         412 KB  conda-forge</span><br><span class="line">    pysocks-1.7.1              |     pyh0701188_6          19 KB  conda-forge</span><br><span class="line">    requests-2.28.1            |     pyhd8ed1ab_1          53 KB  conda-forge</span><br><span class="line">    rtree-1.0.0                |   py39h09fdee3_1          49 KB  conda-forge</span><br><span class="line">    scikit-learn-1.1.2         |   py39hfd4428b_0         7.6 MB  conda-forge</span><br><span class="line">    scipy-1.9.1                |   py39h316f440_0        28.2 MB  conda-forge</span><br><span class="line">    shapely-1.8.4              |   py39he0923fe_0         408 KB  conda-forge</span><br><span class="line">    tiledb-2.11.2              |       h3132609_0         3.2 MB  conda-forge</span><br><span class="line">    unicodedata2-14.0.0        |   py39hb82d6ee_1         492 KB  conda-forge</span><br><span class="line">    win_inet_pton-1.1.0        |   py39hcbf5309_4           9 KB  conda-forge</span><br><span class="line">    zlib-1.2.12                |       hcfcfb64_3         116 KB  conda-forge</span><br><span class="line">    zstd-1.5.2                 |       h7755175_4         401 KB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:       212.7 MB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">  attrs              conda-forge/noarch::attrs-22.1.0-pyh71513ae_1</span><br><span class="line">  blosc              conda-forge/win-64::blosc-1.21.1-h74325e0_3</span><br><span class="line">  boost-cpp          conda-forge/win-64::boost-cpp-1.78.0-h9f4b32c_1</span><br><span class="line">  branca             conda-forge/noarch::branca-0.5.0-pyhd8ed1ab_0</span><br><span class="line">  brotli             conda-forge/win-64::brotli-1.0.9-h8ffe710_7</span><br><span class="line">  brotli-bin         conda-forge/win-64::brotli-bin-1.0.9-h8ffe710_7</span><br><span class="line">  brotlipy           conda-forge/win-64::brotlipy-0.7.0-py39hb82d6ee_1004</span><br><span class="line">  cairo              conda-forge/win-64::cairo-1.16.0-hd694305_1013</span><br><span class="line">  certifi            conda-forge/noarch::certifi-2022.9.14-pyhd8ed1ab_0</span><br><span class="line">  cffi               conda-forge/win-64::cffi-1.15.1-py39h0878f49_0</span><br><span class="line">  cfitsio            conda-forge/win-64::cfitsio-4.1.0-h5a969a9_0</span><br><span class="line">  charset-normalizer conda-forge/noarch::charset-normalizer-2.1.1-pyhd8ed1ab_0</span><br><span class="line">  click              conda-forge/win-64::click-8.1.3-py39hcbf5309_0</span><br><span class="line">  click-plugins      conda-forge/noarch::click-plugins-1.1.1-py_0</span><br><span class="line">  cligj              conda-forge/noarch::cligj-0.7.2-pyhd8ed1ab_1</span><br><span class="line">  colorama           conda-forge/noarch::colorama-0.4.5-pyhd8ed1ab_0</span><br><span class="line">  contourpy          conda-forge/win-64::contourpy-1.0.5-py39h1f6ef14_0</span><br><span class="line">  cryptography       pkgs/main/win-64::cryptography-37.0.1-py39h21b164f_0</span><br><span class="line">  curl               conda-forge/win-64::curl-7.83.1-h789b8ee_0</span><br><span class="line">  cycler             conda-forge/noarch::cycler-0.11.0-pyhd8ed1ab_0</span><br><span class="line">  expat              conda-forge/win-64::expat-2.4.8-h39d44d4_0</span><br><span class="line">  fiona              conda-forge/win-64::fiona-1.8.21-py39h0a5cb73_2</span><br><span class="line">  folium             conda-forge/noarch::folium-0.12.1.post1-pyhd8ed1ab_1</span><br><span class="line">  font-ttf-dejavu-s~ conda-forge/noarch::font-ttf-dejavu-sans-mono-2.37-hab24e00_0</span><br><span class="line">  font-ttf-inconsol~ conda-forge/noarch::font-ttf-inconsolata-3.000-h77eed37_0</span><br><span class="line">  font-ttf-source-c~ conda-forge/noarch::font-ttf-source-code-pro-2.038-h77eed37_0</span><br><span class="line">  font-ttf-ubuntu    conda-forge/noarch::font-ttf-ubuntu-0.83-hab24e00_0</span><br><span class="line">  fontconfig         conda-forge/win-64::fontconfig-2.14.0-hce3cb01_0</span><br><span class="line">  fonts-conda-ecosy~ conda-forge/noarch::fonts-conda-ecosystem-1-0</span><br><span class="line">  fonts-conda-forge  conda-forge/noarch::fonts-conda-forge-1-0</span><br><span class="line">  fonttools          conda-forge/win-64::fonttools-4.37.2-py39ha55989b_0</span><br><span class="line">  freetype           conda-forge/win-64::freetype-2.12.1-h546665d_0</span><br><span class="line">  freexl             conda-forge/win-64::freexl-1.0.6-ha8e266a_0</span><br><span class="line">  gdal               conda-forge/win-64::gdal-3.5.2-py39hddddcaf_0</span><br><span class="line">  geopandas          conda-forge/noarch::geopandas-0.11.1-pyhd8ed1ab_0</span><br><span class="line">  geopandas-base     conda-forge/noarch::geopandas-base-0.11.1-pyha770c72_0</span><br><span class="line">  geos               conda-forge/win-64::geos-3.11.0-h39d44d4_0</span><br><span class="line">  geotiff            conda-forge/win-64::geotiff-1.7.1-h714bc5f_3</span><br><span class="line">  gettext            conda-forge/win-64::gettext-0.19.8.1-ha2e2712_1008</span><br><span class="line">  hdf4               conda-forge/win-64::hdf4-4.2.15-h0e5069d_4</span><br><span class="line">  hdf5               conda-forge/win-64::hdf5-1.12.2-nompi_h57737ce_100</span><br><span class="line">  icu                conda-forge/win-64::icu-70.1-h0e60522_0</span><br><span class="line">  idna               conda-forge/noarch::idna-3.3-pyhd8ed1ab_0</span><br><span class="line">  intel-openmp       conda-forge/win-64::intel-openmp-2022.1.0-h57928b3_3787</span><br><span class="line">  jinja2             conda-forge/noarch::jinja2-3.1.2-pyhd8ed1ab_1</span><br><span class="line">  joblib             conda-forge/noarch::joblib-1.2.0-pyhd8ed1ab_0</span><br><span class="line">  jpeg               conda-forge/win-64::jpeg-9e-h8ffe710_2</span><br><span class="line">  kealib             conda-forge/win-64::kealib-1.4.15-hdf81f3a_1</span><br><span class="line">  kiwisolver         conda-forge/win-64::kiwisolver-1.4.4-py39h2e07f2f_0</span><br><span class="line">  krb5               conda-forge/win-64::krb5-1.19.3-hc8ab02b_0</span><br><span class="line">  lcms2              conda-forge/win-64::lcms2-2.12-h2a16943_0</span><br><span class="line">  lerc               conda-forge/win-64::lerc-4.0.0-h63175ca_0</span><br><span class="line">  libblas            conda-forge/win-64::libblas-3.9.0-16_win64_mkl</span><br><span class="line">  libbrotlicommon    conda-forge/win-64::libbrotlicommon-1.0.9-h8ffe710_7</span><br><span class="line">  libbrotlidec       conda-forge/win-64::libbrotlidec-1.0.9-h8ffe710_7</span><br><span class="line">  libbrotlienc       conda-forge/win-64::libbrotlienc-1.0.9-h8ffe710_7</span><br><span class="line">  libcblas           conda-forge/win-64::libcblas-3.9.0-16_win64_mkl</span><br><span class="line">  libcurl            conda-forge/win-64::libcurl-7.83.1-h789b8ee_0</span><br><span class="line">  libdeflate         conda-forge/win-64::libdeflate-1.14-hcfcfb64_0</span><br><span class="line">  libgdal            conda-forge/win-64::libgdal-3.5.2-hec59f66_0</span><br><span class="line">  libglib            conda-forge/win-64::libglib-2.72.1-h3be07f2_0</span><br><span class="line">  libiconv           conda-forge/win-64::libiconv-1.16-he774522_0</span><br><span class="line">  libkml             conda-forge/win-64::libkml-1.3.0-hf2ab4e4_1015</span><br><span class="line">  liblapack          conda-forge/win-64::liblapack-3.9.0-16_win64_mkl</span><br><span class="line">  libnetcdf          conda-forge/win-64::libnetcdf-4.8.1-nompi_h85765be_104</span><br><span class="line">  libpng             conda-forge/win-64::libpng-1.6.38-h19919ed_0</span><br><span class="line">  libpq              conda-forge/win-64::libpq-14.5-h1ea2d34_0</span><br><span class="line">  librttopo          conda-forge/win-64::librttopo-1.1.0-h2842628_11</span><br><span class="line">  libspatialindex    conda-forge/win-64::libspatialindex-1.9.3-h39d44d4_4</span><br><span class="line">  libspatialite      conda-forge/win-64::libspatialite-5.0.1-ha17912d_18</span><br><span class="line">  libssh2            conda-forge/win-64::libssh2-1.10.0-h9a1e1f7_3</span><br><span class="line">  libtiff            conda-forge/win-64::libtiff-4.4.0-h8e97e67_4</span><br><span class="line">  libwebp-base       conda-forge/win-64::libwebp-base-1.2.4-h8ffe710_0</span><br><span class="line">  libxcb             conda-forge/win-64::libxcb-1.13-hcd874cb_1004</span><br><span class="line">  libxml2            conda-forge/win-64::libxml2-2.9.14-hf5bbc77_4</span><br><span class="line">  libzip             conda-forge/win-64::libzip-1.9.2-h519de47_1</span><br><span class="line">  lz4-c              conda-forge/win-64::lz4-c-1.9.3-h8ffe710_1</span><br><span class="line">  m2w64-gcc-libgfor~ conda-forge/win-64::m2w64-gcc-libgfortran-5.3.0-6</span><br><span class="line">  m2w64-gcc-libs     conda-forge/win-64::m2w64-gcc-libs-5.3.0-7</span><br><span class="line">  m2w64-gcc-libs-co~ conda-forge/win-64::m2w64-gcc-libs-core-5.3.0-7</span><br><span class="line">  m2w64-gmp          conda-forge/win-64::m2w64-gmp-6.1.0-2</span><br><span class="line">  m2w64-libwinpthre~ conda-forge/win-64::m2w64-libwinpthread-git-5.0.0.4634.697f757-2</span><br><span class="line">  mapclassify        conda-forge/noarch::mapclassify-2.4.3-pyhd8ed1ab_0</span><br><span class="line">  markupsafe         conda-forge/win-64::markupsafe-2.1.1-py39hb82d6ee_1</span><br><span class="line">  matplotlib-base    conda-forge/win-64::matplotlib-base-3.6.0-py39haf65ace_0</span><br><span class="line">  mkl                conda-forge/win-64::mkl-2022.1.0-h6a75c08_874</span><br><span class="line">  msys2-conda-epoch  conda-forge/win-64::msys2-conda-epoch-20160418-1</span><br><span class="line">  munch              conda-forge/noarch::munch-2.5.0-py_0</span><br><span class="line">  munkres            conda-forge/noarch::munkres-1.1.4-pyh9f0ad1d_0</span><br><span class="line">  networkx           conda-forge/noarch::networkx-2.8.6-pyhd8ed1ab_0</span><br><span class="line">  numpy              conda-forge/win-64::numpy-1.23.3-py39h9061af7_0</span><br><span class="line">  openjpeg           conda-forge/win-64::openjpeg-2.5.0-hc9384bd_1</span><br><span class="line">  packaging          conda-forge/noarch::packaging-21.3-pyhd8ed1ab_0</span><br><span class="line">  pandas             conda-forge/win-64::pandas-1.4.4-py39h80a8885_0</span><br><span class="line">  pcre               conda-forge/win-64::pcre-8.45-h0e60522_0</span><br><span class="line">  pillow             conda-forge/win-64::pillow-9.2.0-py39hcef8f5f_2</span><br><span class="line">  pixman             conda-forge/win-64::pixman-0.40.0-h8ffe710_0</span><br><span class="line">  poppler            conda-forge/win-64::poppler-22.04.0-hb57f792_3</span><br><span class="line">  poppler-data       conda-forge/noarch::poppler-data-0.4.11-hd8ed1ab_0</span><br><span class="line">  postgresql         conda-forge/win-64::postgresql-14.5-he353ca9_0</span><br><span class="line">  proj               conda-forge/win-64::proj-9.0.1-h1cfcee9_1</span><br><span class="line">  pthread-stubs      conda-forge/win-64::pthread-stubs-0.4-hcd874cb_1001</span><br><span class="line">  pycparser          conda-forge/noarch::pycparser-2.21-pyhd8ed1ab_0</span><br><span class="line">  pyopenssl          conda-forge/noarch::pyopenssl-22.0.0-pyhd8ed1ab_0</span><br><span class="line">  pyparsing          conda-forge/noarch::pyparsing-3.0.9-pyhd8ed1ab_0</span><br><span class="line">  pyproj             conda-forge/win-64::pyproj-3.4.0-py39h2de216b_0</span><br><span class="line">  pysocks            conda-forge/noarch::pysocks-1.7.1-pyh0701188_6</span><br><span class="line">  python-dateutil    conda-forge/noarch::python-dateutil-2.8.2-pyhd8ed1ab_0</span><br><span class="line">  python_abi         conda-forge/win-64::python_abi-3.9-2_cp39</span><br><span class="line">  pytz               conda-forge/noarch::pytz-2022.2.1-pyhd8ed1ab_0</span><br><span class="line">  requests           conda-forge/noarch::requests-2.28.1-pyhd8ed1ab_1</span><br><span class="line">  rtree              conda-forge/win-64::rtree-1.0.0-py39h09fdee3_1</span><br><span class="line">  scikit-learn       conda-forge/win-64::scikit-learn-1.1.2-py39hfd4428b_0</span><br><span class="line">  scipy              conda-forge/win-64::scipy-1.9.1-py39h316f440_0</span><br><span class="line">  shapely            conda-forge/win-64::shapely-1.8.4-py39he0923fe_0</span><br><span class="line">  six                conda-forge/noarch::six-1.16.0-pyh6c4a22f_0</span><br><span class="line">  snappy             conda-forge/win-64::snappy-1.1.9-h82413e6_1</span><br><span class="line">  tbb                conda-forge/win-64::tbb-2021.5.0-h91493d7_2</span><br><span class="line">  threadpoolctl      conda-forge/noarch::threadpoolctl-3.1.0-pyh8a188c0_0</span><br><span class="line">  tiledb             conda-forge/win-64::tiledb-2.11.2-h3132609_0</span><br><span class="line">  unicodedata2       conda-forge/win-64::unicodedata2-14.0.0-py39hb82d6ee_1</span><br><span class="line">  urllib3            conda-forge/noarch::urllib3-1.26.11-pyhd8ed1ab_0</span><br><span class="line">  win_inet_pton      conda-forge/win-64::win_inet_pton-1.1.0-py39hcbf5309_4</span><br><span class="line">  xerces-c           conda-forge/win-64::xerces-c-3.2.3-h0e60522_5</span><br><span class="line">  xorg-libxau        conda-forge/win-64::xorg-libxau-1.0.9-hcd874cb_0</span><br><span class="line">  xorg-libxdmcp      conda-forge/win-64::xorg-libxdmcp-1.1.3-hcd874cb_0</span><br><span class="line">  xyzservices        conda-forge/noarch::xyzservices-2022.6.0-pyhd8ed1ab_0</span><br><span class="line">  zlib               conda-forge/win-64::zlib-1.2.12-hcfcfb64_3</span><br><span class="line">  zstd               conda-forge/win-64::zstd-1.5.2-h7755175_4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Proceed ([y]/n)? y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Downloading and Extracting Packages</span><br><span class="line">openjpeg-2.5.0       | 256 KB    | ######################################################################################## | 100%</span><br><span class="line">cffi-1.15.1          | 223 KB    | ######################################################################################## | 100%</span><br><span class="line">joblib-1.2.0         | 205 KB    | ######################################################################################## | 100%</span><br><span class="line">gdal-3.5.2           | 1.6 MB    | ######################################################################################## | 100%</span><br><span class="line">tiledb-2.11.2        | 3.2 MB    | ######################################################################################## | 100%</span><br><span class="line">markupsafe-2.1.1     | 25 KB     | ######################################################################################## | 100%</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge netcdf4</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Package Plan ##</span></span></span><br><span class="line"></span><br><span class="line">  environment location: D:\Miniconda3\envs\geop</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - netcdf4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    netcdf4-1.6.1              |nompi_py39h34fa13a_100         382 KB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:         382 KB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">  cftime             conda-forge/win-64::cftime-1.6.1-py39h5d4886f_0</span><br><span class="line">  netcdf4            conda-forge/win-64::netcdf4-1.6.1-nompi_py39h34fa13a_100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Proceed ([y]/n)? y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Downloading and Extracting Packages</span><br><span class="line">netcdf4-1.6.1        | 382 KB    | ######################################################################################## | 100%</span><br><span class="line">Preparing transaction: done</span><br><span class="line">Verifying transaction: done</span><br><span class="line">Executing transaction: done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c anaconda openpyxl</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge cartopy</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge seaborn</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge matplotlib</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Package Plan ##</span></span></span><br><span class="line"></span><br><span class="line">  environment location: D:\Miniconda3\envs\geop</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - matplotlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    gdal-3.5.2                 |   py39h27f735e_0         1.6 MB  conda-forge</span><br><span class="line">    gst-plugins-base-1.20.3    |       h001b923_1         2.4 MB  conda-forge</span><br><span class="line">    gstreamer-1.20.3           |       h6b5321d_1         2.1 MB  conda-forge</span><br><span class="line">    hdf5-1.12.2                |nompi_h2a0e4a3_100        24.0 MB  conda-forge</span><br><span class="line">    libgdal-3.5.2              |       hc386656_0         9.5 MB  conda-forge</span><br><span class="line">    libpq-14.5                 |       hfcc5ef8_0         3.8 MB  conda-forge</span><br><span class="line">    libssh2-1.10.0             |       h680486a_3         228 KB  conda-forge</span><br><span class="line">    libzip-1.9.2               |       hfed4ece_1         145 KB  conda-forge</span><br><span class="line">    matplotlib-3.6.0           |   py39hcbf5309_0           7 KB  conda-forge</span><br><span class="line">    postgresql-14.5            |       h1c22c4f_0        23.2 MB  conda-forge</span><br><span class="line">    pyqt-5.15.7                |   py39hb08f45d_0         4.7 MB  conda-forge</span><br><span class="line">    pyqt5-sip-12.11.0          |   py39h415ef7b_0          82 KB  conda-forge</span><br><span class="line">    python-3.9.13              |h9a09f29_0_cpython        17.9 MB  conda-forge</span><br><span class="line">    qt-main-5.15.6             |       hf0cf448_0        68.8 MB  conda-forge</span><br><span class="line">    sip-6.6.2                  |   py39h415ef7b_0         542 KB  conda-forge</span><br><span class="line">    tiledb-2.11.2              |       h5689973_0         3.2 MB  conda-forge</span><br><span class="line">    tornado-6.2                |   py39hb82d6ee_0         657 KB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:       162.9 MB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">  glib               conda-forge/win-64::glib-2.72.1-h7755175_0</span><br><span class="line">  glib-tools         conda-forge/win-64::glib-tools-2.72.1-h7755175_0</span><br><span class="line">  gst-plugins-base   conda-forge/win-64::gst-plugins-base-1.20.3-h001b923_1</span><br><span class="line">  gstreamer          conda-forge/win-64::gstreamer-1.20.3-h6b5321d_1</span><br><span class="line">  libclang           conda-forge/win-64::libclang-14.0.6-default_h77d9078_0</span><br><span class="line">  libclang13         conda-forge/win-64::libclang13-14.0.6-default_h77d9078_0</span><br><span class="line">  libogg             conda-forge/win-64::libogg-1.3.4-h8ffe710_1</span><br><span class="line">  libvorbis          conda-forge/win-64::libvorbis-1.3.7-h0e60522_0</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda install -c conda-forge ipykernel</span><br><span class="line">Collecting package metadata (current_repodata.json): done</span><br><span class="line">Solving environment: done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt; WARNING: A newer version of conda exists. &lt;==</span><br><span class="line">  current version: 4.13.0</span><br><span class="line">  latest version: 4.14.0</span><br><span class="line"></span><br><span class="line">Please update conda by running</span><br><span class="line"></span><br><span class="line">    $ conda update -n base -c defaults conda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Package Plan ##</span></span></span><br><span class="line"></span><br><span class="line">  environment location: D:\Miniconda3\envs\geop</span><br><span class="line"></span><br><span class="line">  added / updated specs:</span><br><span class="line">    - ipykernel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The following packages will be downloaded:</span><br><span class="line"></span><br><span class="line">    package                    |            build</span><br><span class="line">    ---------------------------|-----------------</span><br><span class="line">    asttokens-2.0.8            |     pyhd8ed1ab_0          24 KB  conda-forge</span><br><span class="line">    debugpy-1.6.3              |   py39h415ef7b_0         3.2 MB  conda-forge</span><br><span class="line">    executing-1.0.0            |     pyhd8ed1ab_0          19 KB  conda-forge</span><br><span class="line">    ipykernel-6.15.3           |     pyh025b116_0         100 KB  conda-forge</span><br><span class="line">    ipython-8.5.0              |     pyh08f2357_1         553 KB  conda-forge</span><br><span class="line">    jedi-0.18.1                |     pyhd8ed1ab_2         799 KB  conda-forge</span><br><span class="line">    jupyter_client-7.3.5       |     pyhd8ed1ab_0          91 KB  conda-forge</span><br><span class="line">    jupyter_core-4.11.1        |   py39hcbf5309_0         106 KB  conda-forge</span><br><span class="line">    matplotlib-inline-0.1.6    |     pyhd8ed1ab_0          12 KB  conda-forge</span><br><span class="line">    prompt-toolkit-3.0.31      |     pyha770c72_0         254 KB  conda-forge</span><br><span class="line">    psutil-5.9.2               |   py39ha55989b_0         364 KB  conda-forge</span><br><span class="line">    pygments-2.13.0            |     pyhd8ed1ab_0         821 KB  conda-forge</span><br><span class="line">    pywin32-303                |   py39hb82d6ee_0         6.9 MB  conda-forge</span><br><span class="line">    pyzmq-24.0.0               |   py39hea35a22_0         437 KB  conda-forge</span><br><span class="line">    stack_data-0.5.0           |     pyhd8ed1ab_0          24 KB  conda-forge</span><br><span class="line">    traitlets-5.4.0            |     pyhd8ed1ab_0          85 KB  conda-forge</span><br><span class="line">    ------------------------------------------------------------</span><br><span class="line">                                           Total:        13.6 MB</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">  asttokens          conda-forge/noarch::asttokens-2.0.8-pyhd8ed1ab_0</span><br><span class="line">  backcall           conda-forge/noarch::backcall-0.2.0-pyh9f0ad1d_0</span><br><span class="line">  backports          conda-forge/noarch::backports-1.0-py_2</span><br><span class="line">  backports.functoo~ conda-forge/noarch::backports.functools_lru_cache-1.6.4-pyhd8ed1ab_0</span><br><span class="line">  debugpy            conda-forge/win-64::debugpy-1.6.3-py39h415ef7b_0</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda env export &gt; C:\Users\huangs\Desktop\test\geop20220918.yml</span><br><span class="line"></span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda activate base</span><br><span class="line">(base) C:\Users\huangs\Desktop\test&gt;conda env create -f C:\Users\huangs\Desktop\test\geop20220918.yml</span><br><span class="line">(geop) C:\Users\huangs\Desktop\test&gt;conda remove --name geop_test --all</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;【conda基础环境完结篇5】前面已经记录了一些&lt;a href=&quot;https://hscyber.github.io/tags/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/&quot;&gt;基础概念和如何安装配置环境&lt;/a&gt;，这里&lt;mark&gt;共享我本机的conda环境（涵盖常见矢量栅格处理包）&lt;/mark&gt;，可以直接下载yml文件安装，安装完即可用，也可在其他系统中直接安装如ubuntu系统，输入相应的命令完成配置。所以如果从0开始配置环境的话，只需参照&lt;a href=&quot;https://hscyber.github.io/posts/9089f596/&quot;&gt;Python环境(2)&lt;/a&gt;及本博客。&lt;/p&gt;</summary>
    
    
    
    <category term="Python基础" scheme="https://hscyber.github.io/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Python环境配置" scheme="https://hscyber.github.io/tags/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    <category term="Conda" scheme="https://hscyber.github.io/tags/Conda/"/>
    
  </entry>
  
</feed>
